-- MySQL Script generated by MySQL Workbench
-- 01/13/17 15:07:08
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';


-- -----------------------------------------------------
-- Table `empresasgrau`.`pubpayloaders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empresasgrau`.`pubpayloaders` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(255) NULL,
  `descripcion` TEXT NULL,
  `ancho` INT NULL,
  `largo` INT NULL,
  `bandejas` INT NULL,
  `precio_base` VARCHAR(45) NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `empresasgrau`.`pubagregados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empresasgrau`.`pubagregados` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(255) NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Agregados que puede tener un payloader. En un principio 1: Grafica bandejas, 2: Cenefa de 49x50, 3: Laterales 49x130.';


-- -----------------------------------------------------
-- Table `empresasgrau`.`pubcorrugados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empresasgrau`.`pubcorrugados` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(255) NULL,
  `descripcion` TEXT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `empresasgrau`.`pubcantidades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empresasgrau`.`pubcantidades` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cantidad` INT NULL COMMENT 'Peso en kg.',
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `empresasgrau`.`pubcotizacionescorrugado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empresasgrau`.`pubcotizacionescorrugado` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `corrugado_id` INT NOT NULL,
  `cantidad_id` INT NOT NULL,
  `vendedor_id` INT NULL COMMENT 'Por ahora (mientras no se cree el login) será NULL',
  `cliente_id` INT NOT NULL,
  `comentarios` TEXT NULL,
  `usuario_id` INT NULL,
  `forma_pago_id` INT NULL,
  `estado` INT NULL COMMENT 'Estado de la cotización. 1:Pendiente, 2:Aprobada',
  `fecha_entrega` DATE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_pubcotizacionescorrugado_corrugados1_idx` (`corrugado_id` ASC),
  INDEX `fk_pubcotizacionescorrugado_pubcantidades1_idx` (`cantidad_id` ASC),
  INDEX `fk_pubcotizacionescorrugado_clientes1_idx` (`cliente_id` ASC),
  CONSTRAINT `fk_pubcotizacionescorrugado_corrugados1`
    FOREIGN KEY (`corrugado_id`)
    REFERENCES `empresasgrau`.`pubcorrugados` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pubcotizacionescorrugado_pubcantidades1`
    FOREIGN KEY (`cantidad_id`)
    REFERENCES `empresasgrau`.`pubcantidades` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pubcotizacionescorrugado_clientes1`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `empresasgrau`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `empresasgrau`.`pubpreciobasecantidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empresasgrau`.`pubpreciobasecantidad` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cantidad_min` INT NULL,
  `cantidad_max` INT NULL,
  `precio` INT NULL,
  `payloader_id` INT NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_pubpreciobasecantidad_pubpayloaders1_idx` (`payloader_id` ASC),
  CONSTRAINT `fk_pubpreciobasecantidad_pubpayloaders1`
    FOREIGN KEY (`payloader_id`)
    REFERENCES `empresasgrau`.`pubpayloaders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `empresasgrau`.`pubagregadopayloader`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empresasgrau`.`pubagregadopayloader` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `agregado_id` INT NOT NULL,
  `precio` INT NULL,
  `preciobasecantidad_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_pubagregadopayloader_pubagregados1_idx` (`agregado_id` ASC),
  INDEX `fk_pubagregadopayloader_pubpreciobasecantidad1_idx` (`preciobasecantidad_id` ASC),
  CONSTRAINT `fk_pubagregadopayloader_pubagregados1`
    FOREIGN KEY (`agregado_id`)
    REFERENCES `empresasgrau`.`pubagregados` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pubagregadopayloader_pubpreciobasecantidad1`
    FOREIGN KEY (`preciobasecantidad_id`)
    REFERENCES `empresasgrau`.`pubpreciobasecantidad` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabla que según el id de payloader obtenido de la tabla preciobasecantidad, además de las cantidades mínimas y máximas, almacena un precio para el agregado en esas mismas cantidades';


-- -----------------------------------------------------
-- Table `empresasgrau`.`pubcotizacionespayloader`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empresasgrau`.`pubcotizacionespayloader` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `payloader_id` INT NOT NULL,
  `cantidad` INT NULL,
  `vendedor_id` INT NULL,
  `cliente_id` INT NOT NULL,
  `comentarios` TEXT NULL,
  `forma_pago_id` INT NULL,
  `usuarios_id` INT NULL,
  `estado` INT NOT NULL COMMENT 'Estado de la cotización. 1:Pendiente, 2:Aprobada',
  `fecha_entrega` DATE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_pubcotizacionespayloader_pubpayloaders1_idx` (`payloader_id` ASC),
  INDEX `fk_pubcotizacionespayloader_clientes1_idx` (`cliente_id` ASC),
  CONSTRAINT `fk_pubcotizacionespayloader_pubpayloaders1`
    FOREIGN KEY (`payloader_id`)
    REFERENCES `empresasgrau`.`pubpayloaders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pubcotizacionespayloader_clientes1`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `empresasgrau`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `empresasgrau`.`pubpreciocantidadcorrugado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empresasgrau`.`pubpreciocantidadcorrugado` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `corrugado_id` INT NOT NULL,
  `precio` INT NULL,
  `cantidad_id` INT NOT NULL,
  INDEX `fk_pubpreciocantidadcorrugado_pubcorrugados1_idx` (`corrugado_id` ASC),
  PRIMARY KEY (`id`),
  INDEX `fk_pubpreciocantidadcorrugado_pubcantidades1_idx` (`cantidad_id` ASC),
  CONSTRAINT `fk_pubpreciocantidadcorrugado_pubcorrugados1`
    FOREIGN KEY (`corrugado_id`)
    REFERENCES `empresasgrau`.`pubcorrugados` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pubpreciocantidadcorrugado_pubcantidades1`
    FOREIGN KEY (`cantidad_id`)
    REFERENCES `empresasgrau`.`pubcantidades` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `empresasgrau`.`pubagregado_cotizacion_payloader`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empresasgrau`.`pubagregado_cotizacion_payloader` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cotizacionespayloader_id` INT NOT NULL,
  `agregado_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_agregado_cotizacion_payloader_pubcotizacionespayloader1_idx` (`cotizacionespayloader_id` ASC),
  INDEX `fk_pubagregado_cotizacion_payloader_pubagregados1_idx` (`agregado_id` ASC),
  CONSTRAINT `fk_agregado_cotizacion_payloader_pubcotizacionespayloader1`
    FOREIGN KEY (`cotizacionespayloader_id`)
    REFERENCES `empresasgrau`.`pubcotizacionespayloader` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pubagregado_cotizacion_payloader_pubagregados1`
    FOREIGN KEY (`agregado_id`)
    REFERENCES `empresasgrau`.`pubagregados` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `empresasgrau`.`pubordenescompra_corrugado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empresasgrau`.`pubordenescompra_corrugado` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `cotizacion_id` INT NOT NULL,
  `fecha_entrega` DATE NULL,
  `corrugado_id` INT NOT NULL,
  `vendedor_id` INT NULL COMMENT 'Por ahora (mientras no se cree el login) será NULL',
  `cliente_id` INT NOT NULL,
  `comentarios` TEXT NULL,
  `usuario_id` INT NULL,
  `forma_pago_id` INT NULL,
  `estado` INT NULL COMMENT 'Estado de la orden. 1:Pendiente, 2:Aprobada',
  `cantidad` INT NULL,
  `precio` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_pubcotizacionescorrugado_corrugados1_idx` (`corrugado_id` ASC),
  INDEX `fk_pubcotizacionescorrugado_clientes1_idx` (`cliente_id` ASC),
  INDEX `fk_pubordenescompra_corrugado_pubcotizacionescorrugado1_idx` (`cotizacion_id` ASC),
  CONSTRAINT `fk_pubcotizacionescorrugado_corrugados10`
    FOREIGN KEY (`corrugado_id`)
    REFERENCES `empresasgrau`.`pubcorrugados` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pubcotizacionescorrugado_clientes10`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `empresasgrau`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pubordenescompra_corrugado_pubcotizacionescorrugado1`
    FOREIGN KEY (`cotizacion_id`)
    REFERENCES `empresasgrau`.`pubcotizacionescorrugado` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Una orden de compra está basada en una cotización, sin embargo a la orden de compra se le pueden modificar los datos (podrían haber sido almacenadas en una tabla general llamada \"cotizaciones\", a la cual solo se modificara y se mantuviera un estado que identificara si es orden o cotización, sin embargo se separó para mantener histórico).';

-- -----------------------------------------------------
-- Table `empresasgrau`.`pubordenescompra_payloader`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empresasgrau`.`pubordenescompra_payloader` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cotizacion_id` INT NOT NULL,
  `payloader_id` INT NOT NULL,
  `vendedor_id` INT NULL,
  `forma_pago_id` INT NULL,
  `usuarios_id` INT NULL,
  `cliente_id` INT NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `cantidad` INT NULL,
  `precio` INT NULL,
  `comentarios` TEXT NULL,
  `estado` INT NOT NULL COMMENT 'Estado de la orden. 1:Pendiente, 2:Aprobada',
  `fecha_entrega` DATE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_pubcotizacionespayloader_pubpayloaders1_idx` (`payloader_id` ASC),
  INDEX `fk_pubcotizacionespayloader_clientes1_idx` (`cliente_id` ASC),
  INDEX `fk_pubordenescompra_payloader_pubcotizacionespayloader1_idx` (`cotizacion_id` ASC),
  CONSTRAINT `fk_pubcotizacionespayloader_pubpayloaders10`
    FOREIGN KEY (`payloader_id`)
    REFERENCES `empresasgrau`.`pubpayloaders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pubcotizacionespayloader_clientes10`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `empresasgrau`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pubordenescompra_payloader_pubcotizacionespayloader1`
    FOREIGN KEY (`cotizacion_id`)
    REFERENCES `empresasgrau`.`pubcotizacionespayloader` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Una orden de compra está basada en una cotización, sin embargo a la orden de compra se le pueden modificar los datos (podrían haber sido almacenadas en una tabla general llamada \"cotizaciones\", a la cual solo se modificara y se mantuviera un estado que identificara si es orden o cotización, sin embargo se separó para mantener histórico).';


-- -----------------------------------------------------
-- Table `empresasgrau`.`pubagregado_orden_payloader`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `empresasgrau`.`pubagregado_orden_payloader` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ordencompra_id` INT NOT NULL,
  `agregado_id` INT NOT NULL,
  INDEX `fk_pubagregado_orden_payloader_pubordenescompra_payloader1_idx` (`ordencompra_id` ASC),
  INDEX `fk_pubagregado_orden_payloader_pubagregados1_idx` (`agregado_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_pubagregado_orden_payloader_pubordenescompra_payloader1`
    FOREIGN KEY (`ordencompra_id`)
    REFERENCES `empresasgrau`.`pubordenescompra_payloader` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pubagregado_orden_payloader_pubagregados1`
    FOREIGN KEY (`agregado_id`)
    REFERENCES `empresasgrau`.`pubagregados` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
