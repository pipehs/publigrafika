Searching 8513 files for "dompdf" (case sensitive)

C:\virtualhost\empresasgrau\app\Http\Controllers\CotizacionesCorrugadosController.php:
  454                    $cuerpo.='</body></html>';
  455  
  456:             $pdf = \App::make('dompdf.wrapper');
  457             	$nombre="Cotización de Cliente ".$id." ".date("Y-m-d H:i:s").".pdf";
  458              $pdf->loadHTML($cuerpo);

C:\virtualhost\empresasgrau\app\Http\Controllers\CotizacionesPayloadersController.php:
  471                    $cuerpo.='</body></html>';
  472  
  473:             $pdf = \App::make('dompdf.wrapper');
  474             	$nombre="Cotización de Cliente ".$id." ".date("Y-m-d H:i:s").".pdf";
  475              $pdf->loadHTML($cuerpo);

C:\virtualhost\empresasgrau\composer.json:
    8  		"laravel/framework": "5.0.*",
    9  		"laravelcollective/html": "~5.0",
   10: 		"barryvdh/laravel-dompdf": "0.6.*",
   11  		"filp/whoops":"~1.0"
   12  	},

C:\virtualhost\empresasgrau\composer.lock:
    9      "packages": [
   10          {
   11:             "name": "barryvdh/laravel-dompdf",
   12              "version": "v0.6.1",
   13              "source": {
   14                  "type": "git",
   15:                 "url": "https://github.com/barryvdh/laravel-dompdf.git",
   16                  "reference": "b606788108833f7765801dca35455fb23ce9f869"
   17              },
   18              "dist": {
   19                  "type": "zip",
   20:                 "url": "https://api.github.com/repos/barryvdh/laravel-dompdf/zipball/b606788108833f7765801dca35455fb23ce9f869",
   21                  "reference": "b606788108833f7765801dca35455fb23ce9f869",
   22                  "shasum": ""
   23              },
   24              "require": {
   25:                 "dompdf/dompdf": "0.6.*",
   26                  "illuminate/support": "5.0.x|5.1.x|5.2.x",
   27                  "php": ">=5.4.0"
   ..
   50              "description": "A DOMPDF Wrapper for Laravel",
   51              "keywords": [
   52:                 "dompdf",
   53                  "laravel",
   54                  "pdf"
   ..
  273          },
  274          {
  275:             "name": "dompdf/dompdf",
  276              "version": "v0.6.2",
  277              "source": {
  278                  "type": "git",
  279:                 "url": "https://github.com/dompdf/dompdf.git",
  280                  "reference": "cc06008f75262510ee135b8cbb14e333a309f651"
  281              },
  282              "dist": {
  283                  "type": "zip",
  284:                 "url": "https://api.github.com/repos/dompdf/dompdf/zipball/cc06008f75262510ee135b8cbb14e333a309f651",
  285                  "reference": "cc06008f75262510ee135b8cbb14e333a309f651",
  286                  "shasum": ""
  ...
  310              ],
  311              "description": "DOMPDF is a CSS 2.1 compliant HTML to PDF converter",
  312:             "homepage": "https://github.com/dompdf/dompdf",
  313              "time": "2015-12-07 04:07:13"
  314          },

C:\virtualhost\empresasgrau\storage\logs\laravel-2016-12-14.log:
 4414  #42 C:\virtualhost\empresasgrau\public\index.php(0): {main}()
 4415  #43 {main}  
 4416: [2016-12-14 16:05:38] local.ERROR: exception 'DOMPDF_Exception' with message 'Min/max width is undefined for table rows' in C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_row_frame_reflower.cls.php:59
 4417  Stack trace:
 4418: #0 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(715): Table_Row_Frame_Reflower->get_min_max_width()
 4419: #1 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_reflower.cls.php(193): Frame_Decorator->get_min_max_width()
 4420: #2 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(715): Frame_Reflower->get_min_max_width()
 4421: #3 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_reflower.cls.php(193): Frame_Decorator->get_min_max_width()
 4422: #4 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(715): Frame_Reflower->get_min_max_width()
 4423: #5 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cellmap.cls.php(524): Frame_Decorator->get_min_max_width()
 4424: #6 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cellmap.cls.php(399): Cellmap->add_frame(Object(Table_Cell_Frame_Decorator))
 4425: #7 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cellmap.cls.php(399): Cellmap->add_frame(Object(Table_Row_Frame_Decorator))
 4426: #8 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cellmap.cls.php(399): Cellmap->add_frame(Object(Table_Row_Group_Frame_Decorator))
 4427: #9 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_frame_reflower.cls.php(520): Cellmap->add_frame(Object(Table_Frame_Decorator))
 4428: #10 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_frame_reflower.cls.php(398): Table_Frame_Reflower->get_min_max_width()
 4429: #11 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(711): Table_Frame_Reflower->reflow(Object(Block_Frame_Decorator))
 4430: #12 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\block_frame_reflower.cls.php(750): Frame_Decorator->reflow(Object(Block_Frame_Decorator))
 4431: #13 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(711): Block_Frame_Reflower->reflow(NULL)
 4432: #14 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\page_frame_reflower.cls.php(123): Frame_Decorator->reflow()
 4433: #15 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(711): Page_Frame_Reflower->reflow(NULL)
 4434: #16 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\dompdf.cls.php(973): Frame_Decorator->reflow()
 4435: #17 C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\src\PDF.php(208): DOMPDF->render()
 4436: #18 C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\src\PDF.php(154): Barryvdh\DomPDF\PDF->render()
 4437: #19 C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\src\PDF.php(191): Barryvdh\DomPDF\PDF->output()
 4438  #20 C:\virtualhost\empresasgrau\app\Http\Controllers\CotizacionesPayloadersController.php(475): Barryvdh\DomPDF\PDF->stream()
 4439  #21 [internal function]: App\Http\Controllers\CotizacionesPayloadersController->getPdf('6')
 ....
 4479  #61 C:\virtualhost\empresasgrau\public\index.php(53): Illuminate\Foundation\Http\Kernel->handle(Object(Illuminate\Http\Request))
 4480  #62 {main}  
 4481: [2016-12-14 16:05:54] local.ERROR: exception 'DOMPDF_Exception' with message 'Min/max width is undefined for table rows' in C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_row_frame_reflower.cls.php:59
 4482  Stack trace:
 4483: #0 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(715): Table_Row_Frame_Reflower->get_min_max_width()
 4484: #1 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_reflower.cls.php(193): Frame_Decorator->get_min_max_width()
 4485: #2 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(715): Frame_Reflower->get_min_max_width()
 4486: #3 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_reflower.cls.php(193): Frame_Decorator->get_min_max_width()
 4487: #4 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(715): Frame_Reflower->get_min_max_width()
 4488: #5 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cellmap.cls.php(524): Frame_Decorator->get_min_max_width()
 4489: #6 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cellmap.cls.php(399): Cellmap->add_frame(Object(Table_Cell_Frame_Decorator))
 4490: #7 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cellmap.cls.php(399): Cellmap->add_frame(Object(Table_Row_Frame_Decorator))
 4491: #8 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cellmap.cls.php(399): Cellmap->add_frame(Object(Table_Row_Group_Frame_Decorator))
 4492: #9 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_frame_reflower.cls.php(520): Cellmap->add_frame(Object(Table_Frame_Decorator))
 4493: #10 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_frame_reflower.cls.php(398): Table_Frame_Reflower->get_min_max_width()
 4494: #11 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(711): Table_Frame_Reflower->reflow(Object(Block_Frame_Decorator))
 4495: #12 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\block_frame_reflower.cls.php(750): Frame_Decorator->reflow(Object(Block_Frame_Decorator))
 4496: #13 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(711): Block_Frame_Reflower->reflow(NULL)
 4497: #14 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\page_frame_reflower.cls.php(123): Frame_Decorator->reflow()
 4498: #15 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(711): Page_Frame_Reflower->reflow(NULL)
 4499: #16 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\dompdf.cls.php(973): Frame_Decorator->reflow()
 4500: #17 C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\src\PDF.php(208): DOMPDF->render()
 4501: #18 C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\src\PDF.php(154): Barryvdh\DomPDF\PDF->render()
 4502: #19 C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\src\PDF.php(191): Barryvdh\DomPDF\PDF->output()
 4503  #20 C:\virtualhost\empresasgrau\app\Http\Controllers\CotizacionesPayloadersController.php(475): Barryvdh\DomPDF\PDF->stream()
 4504  #21 [internal function]: App\Http\Controllers\CotizacionesPayloadersController->getPdf('6')
 ....
 4544  #61 C:\virtualhost\empresasgrau\public\index.php(53): Illuminate\Foundation\Http\Kernel->handle(Object(Illuminate\Http\Request))
 4545  #62 {main}  
 4546: [2016-12-14 16:06:09] local.ERROR: exception 'DOMPDF_Exception' with message 'Min/max width is undefined for table rows' in C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_row_frame_reflower.cls.php:59
 4547  Stack trace:
 4548: #0 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(715): Table_Row_Frame_Reflower->get_min_max_width()
 4549: #1 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_reflower.cls.php(193): Frame_Decorator->get_min_max_width()
 4550: #2 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(715): Frame_Reflower->get_min_max_width()
 4551: #3 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_reflower.cls.php(193): Frame_Decorator->get_min_max_width()
 4552: #4 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(715): Frame_Reflower->get_min_max_width()
 4553: #5 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cellmap.cls.php(524): Frame_Decorator->get_min_max_width()
 4554: #6 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cellmap.cls.php(399): Cellmap->add_frame(Object(Table_Cell_Frame_Decorator))
 4555: #7 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cellmap.cls.php(399): Cellmap->add_frame(Object(Table_Row_Frame_Decorator))
 4556: #8 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cellmap.cls.php(399): Cellmap->add_frame(Object(Table_Row_Group_Frame_Decorator))
 4557: #9 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_frame_reflower.cls.php(520): Cellmap->add_frame(Object(Table_Frame_Decorator))
 4558: #10 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_frame_reflower.cls.php(398): Table_Frame_Reflower->get_min_max_width()
 4559: #11 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(711): Table_Frame_Reflower->reflow(Object(Block_Frame_Decorator))
 4560: #12 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\block_frame_reflower.cls.php(750): Frame_Decorator->reflow(Object(Block_Frame_Decorator))
 4561: #13 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(711): Block_Frame_Reflower->reflow(NULL)
 4562: #14 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\page_frame_reflower.cls.php(123): Frame_Decorator->reflow()
 4563: #15 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php(711): Page_Frame_Reflower->reflow(NULL)
 4564: #16 C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\dompdf.cls.php(973): Frame_Decorator->reflow()
 4565: #17 C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\src\PDF.php(208): DOMPDF->render()
 4566: #18 C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\src\PDF.php(154): Barryvdh\DomPDF\PDF->render()
 4567: #19 C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\src\PDF.php(191): Barryvdh\DomPDF\PDF->output()
 4568  #20 C:\virtualhost\empresasgrau\app\Http\Controllers\CotizacionesPayloadersController.php(472): Barryvdh\DomPDF\PDF->stream()
 4569  #21 [internal function]: App\Http\Controllers\CotizacionesPayloadersController->getPdf('6')

C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\composer.json:
    1  {
    2:     "name": "barryvdh/laravel-dompdf",
    3      "description": "A DOMPDF Wrapper for Laravel",
    4      "license": "MIT",
    5:     "keywords": ["laravel", "dompdf", "pdf"],
    6      "authors": [
    7          {
    .
   13          "php": ">=5.4.0",
   14          "illuminate/support": "5.0.x|5.1.x|5.2.x",
   15:         "dompdf/dompdf": "0.6.*"
   16      },
   17  

C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\config\dompdf.php:
    9      |
   10      | Set some default values. It is possible to add all defines that can be set
   11:     | in dompdf_config.inc.php. You can also override the entire config file.
   12      |
   13      */
   14:     'show_warnings' => false,   // Throw an Exception on warnings from dompdf
   15      'orientation' => 'portrait',
   16      'defines' => array(
   ..
   39           * Symbol, ZapfDingbats.
   40           */
   41:         "DOMPDF_FONT_DIR" => storage_path('fonts/'), // advised by dompdf (https://github.com/dompdf/dompdf/pull/782)
   42  
   43          /**
   ..
   63           * ==== IMPORTANT ====
   64           *
   65:          * dompdf's "chroot": Prevents dompdf from accessing system files or other
   66:          * files on the webserver.  All local files opened by dompdf must be in a
   67           * subdirectory of this directory.  DO NOT set it to '/' since this could
   68:          * allow an attacker to use dompdf to read any files on the server.  This
   69           * should be an absolute path.
   70:          * This is only checked on command line call by dompdf.php, but not by
   71           * direct class use like:
   72:          * $dompdf = new DOMPDF();	$dompdf->load_html($htmldata); $dompdf->render(); $pdfdata = $dompdf->output();
   73           */
   74          "DOMPDF_CHROOT" => realpath(base_path()),
   ..
   80           * loaded via load_font.php.
   81           *
   82:          * When enabled, dompdf can support all Unicode glyphs. Any glyphs used in a
   83           * document must be present in your fonts, however.
   84           */
   ..
  100           *
  101           * Both PDFLib & CPDF rendering backends provide sufficient rendering
  102:          * capabilities for dompdf, however additional features (e.g. object,
  103           * image and font support, etc.) differ between backends.  Please see
  104           * {@link PDFLib_Adapter} for more information on the PDFLib backend
  ...
  231           * Attention!
  232           * This can be a security risk, in particular in combination with DOMPDF_ENABLE_PHP and
  233:          * allowing remote access to dompdf.php or on allowing remote html code to be passed to
  234:          * $dompdf = new DOMPDF(, $dompdf->load_html(...,
  235           * This allows anonymous users to download legally doubtful internet content which on
  236           * tracing back appears to being downloaded by your server, or allows malicious php code

C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\readme.md:
    1  ## DOMPDF Wrapper for Laravel 5
    2  
    3: ### For Laravel 4.x, check the [0.4 branch](https://github.com/barryvdh/laravel-dompdf/tree/0.4)!
    4  
    5: Require this package in your composer.json and update composer. This will download the package and the dompdf + fontlib libraries also.
    6  
    7:     "barryvdh/laravel-dompdf": "0.6.*"
    8  
    9  ## Installation
   ..
   30  
   31    ```
   32:   $app->configure('dompdf');
   33    ```
   34    
   ..
   37  You can create a new DOMPDF instance and load a HTML string, file or view name. You can save it to a file, or stream (show in browser) or download.
   38  
   39:     $pdf = App::make('dompdf.wrapper');
   40      $pdf->loadHTML('<h1>Test</h1>');
   41      return $pdf->stream();
   ..
   56  If you need the output as a string, you can get the rendered PDF with the output() function, so you can save/output it yourself.
   57  
   58: Use `php artisan vendor:publish` to create a config file located at `config/dompdf.php` which will allow you to define local configurations to change some settings (default paper etc).
   59  You can also use your ConfigProvider to set certain keys.
   60  

C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\src\Facade.php:
   11       * @return string
   12       */
   13:     protected static function getFacadeAccessor() { return 'dompdf.wrapper'; }
   14  
   15      /**

C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\src\PDF.php:
   12   * A Laravel wrapper for DOMPDF
   13   *
   14:  * @package laravel-dompdf
   15   * @author Barry vd. Heuvel
   16   */
   ..
   18  
   19      /** @var \DOMPDF  */
   20:     protected $dompdf;
   21  
   22      /** @var \Illuminate\Contracts\Config\Repository  */
   ..
   36  
   37      /**
   38:      * @param \DOMPDF $dompdf
   39       * @param \Illuminate\Contracts\Config\Repository $config
   40       * @param \Illuminate\Filesystem\Filesystem $files
   41       * @param \Illuminate\View\Factory $view
   42       */
   43:     public function __construct(DOMPDF $dompdf, ConfigRepository $config, Filesystem $files, ViewFactory $view){
   44:         $this->dompdf = $dompdf;
   45          $this->config = $config;
   46          $this->files = $files;
   47          $this->view = $view;
   48  
   49:         $this->showWarnings = $this->config->get('dompdf.show_warnings', false);
   50  
   51          //To prevent old configs from not working..
   52:         if($this->config->has('dompdf.paper')){
   53:             $this->paper = $this->config->get('dompdf.paper');
   54          }else{
   55              $this->paper = DOMPDF_DEFAULT_PAPER_SIZE;
   56          }
   57  
   58:         $this->orientation = $this->config->get('dompdf.orientation') ?: 'portrait';
   59      }
   60  
   ..
   65       */
   66      public function getDomPDF(){
   67:         return $this->dompdf;
   68      }
   69  
   ..
  114      public function loadHTML($string, $encoding = null){
  115          $string = $this->convertEntities($string);
  116:         $this->dompdf->load_html($string, $encoding);
  117          $this->rendered = false;
  118          return $this;
  ...
  126       */
  127      public function loadFile($file){
  128:         $this->dompdf->load_html_file($file);
  129          $this->rendered = false;
  130          return $this;
  ...
  154              $this->render();
  155          }
  156:         return $this->dompdf->output();
  157      }
  158  
  ...
  200       */
  201      protected function render(){
  202:         if(!$this->dompdf){
  203              throw new Exception('DOMPDF not created yet');
  204          }
  205  
  206:         $this->dompdf->set_paper($this->paper, $this->orientation);
  207  
  208:         $this->dompdf->render();
  209  
  210          if ( $this->showWarnings ) {
  211:             global $_dompdf_warnings;
  212:             if(count($_dompdf_warnings)){
  213                  $warnings = '';
  214:                 foreach ($_dompdf_warnings as $msg){
  215                      $warnings .= $msg . "\n";
  216                  }
  217:                 // $warnings .= $this->dompdf->get_canvas()->get_cpdf()->messages;
  218                  if(!empty($warnings)){
  219                      throw new Exception($warnings);

C:\virtualhost\empresasgrau\vendor\barryvdh\laravel-dompdf\src\ServiceProvider.php:
   23      public function register()
   24      {
   25:         $configPath = __DIR__.'/../config/dompdf.php';
   26:         $this->mergeConfigFrom($configPath, 'dompdf');
   27  
   28:         $this->app->bind('dompdf', function ($app) {
   29:             $dompdf = new \DOMPDF();
   30:             $dompdf->set_base_path(realpath(base_path('public')));
   31  
   32:             return $dompdf;
   33          });
   34:         $this->app->alias('dompdf', 'DOMPDF');
   35  
   36:         $this->app->bind('dompdf.wrapper', function ($app) {
   37:             return new PDF($app['dompdf'], $app['config'], $app['files'], $app['view']);
   38          });
   39  
   ..
   53      {
   54          if (! $this->isLumen()) {
   55:             $configPath = __DIR__.'/../config/dompdf.php';
   56:             $this->publishes([$configPath => config_path('dompdf.php')], 'config');
   57          }
   58  
   59:         $defines = $this->app['config']->get('dompdf.defines') ?: array();
   60          foreach ($defines as $key => $value) {
   61              $this->define($key, $value);
   ..
   66          $this->define("DOMPDF_ENABLE_AUTOLOAD", false);
   67          $this->define("DOMPDF_CHROOT", realpath(base_path()));
   68:         $this->define("DOMPDF_LOG_OUTPUT_FILE", storage_path('logs/dompdf.html'));
   69  
   70          $config_file = $this->app['config']->get(
   71:             'dompdf.config_file'
   72:         ) ?: base_path('vendor/dompdf/dompdf/dompdf_config.inc.php');
   73  
   74          if (file_exists($config_file)) {
   ..
   76          } else {
   77              throw new Exception(
   78:                 "$config_file cannot be loaded, please configure correct config file (dompdf.config_file)"
   79              );
   80          }
   ..
   88      public function provides()
   89      {
   90:         return array('dompdf', 'dompdf.wrapper');
   91      }
   92  

C:\virtualhost\empresasgrau\vendor\composer\autoload_classmap.php:
    7  
    8  return array(
    9:     'Absolute_Positioner' => $vendorDir . '/dompdf/dompdf/include/absolute_positioner.cls.php',
   10:     'Abstract_Renderer' => $vendorDir . '/dompdf/dompdf/include/abstract_renderer.cls.php',
   11      'Adobe_Font_Metrics' => $vendorDir . '/phenx/php-font-lib/classes/Adobe_Font_Metrics.php',
   12      'App\\Agregado' => $baseDir . '/app/Agregado.php',
   ..
   55      'App\\Services\\Registrar' => $baseDir . '/app/Services/Registrar.php',
   56      'App\\User' => $baseDir . '/app/User.php',
   57:     'Attribute_Translator' => $vendorDir . '/dompdf/dompdf/include/attribute_translator.cls.php',
   58:     'Barryvdh\\DomPDF\\Facade' => $vendorDir . '/barryvdh/laravel-dompdf/src/Facade.php',
   59:     'Barryvdh\\DomPDF\\PDF' => $vendorDir . '/barryvdh/laravel-dompdf/src/PDF.php',
   60:     'Barryvdh\\DomPDF\\ServiceProvider' => $vendorDir . '/barryvdh/laravel-dompdf/src/ServiceProvider.php',
   61:     'Block_Frame_Decorator' => $vendorDir . '/dompdf/dompdf/include/block_frame_decorator.cls.php',
   62:     'Block_Frame_Reflower' => $vendorDir . '/dompdf/dompdf/include/block_frame_reflower.cls.php',
   63:     'Block_Positioner' => $vendorDir . '/dompdf/dompdf/include/block_positioner.cls.php',
   64:     'Block_Renderer' => $vendorDir . '/dompdf/dompdf/include/block_renderer.cls.php',
   65:     'CPDF_Adapter' => $vendorDir . '/dompdf/dompdf/include/cpdf_adapter.cls.php',
   66:     'CSS_Color' => $vendorDir . '/dompdf/dompdf/include/css_color.cls.php',
   67:     'Cached_PDF_Decorator' => $vendorDir . '/dompdf/dompdf/include/cached_pdf_decorator.cls.php',
   68:     'Canvas' => $vendorDir . '/dompdf/dompdf/include/canvas.cls.php',
   69:     'Canvas_Factory' => $vendorDir . '/dompdf/dompdf/include/canvas_factory.cls.php',
   70      'Carbon\\Carbon' => $vendorDir . '/nesbot/carbon/src/Carbon/Carbon.php',
   71      'Carbon\\CarbonInterval' => $vendorDir . '/nesbot/carbon/src/Carbon/CarbonInterval.php',
   72:     'Cellmap' => $vendorDir . '/dompdf/dompdf/include/cellmap.cls.php',
   73      'ClassPreloader\\Application' => $vendorDir . '/classpreloader/classpreloader/src/Application.php',
   74      'ClassPreloader\\ClassList' => $vendorDir . '/classpreloader/classpreloader/src/ClassList.php',
   ..
  105      'Cron\\MonthField' => $vendorDir . '/mtdowling/cron-expression/src/Cron/MonthField.php',
  106      'Cron\\YearField' => $vendorDir . '/mtdowling/cron-expression/src/Cron/YearField.php',
  107:     'DOMPDF' => $vendorDir . '/dompdf/dompdf/include/dompdf.cls.php',
  108:     'DOMPDF_Exception' => $vendorDir . '/dompdf/dompdf/include/dompdf_exception.cls.php',
  109:     'DOMPDF_Image_Exception' => $vendorDir . '/dompdf/dompdf/include/dompdf_image_exception.cls.php',
  110      'DatabaseSeeder' => $baseDir . '/database/seeds/DatabaseSeeder.php',
  111      'Diff' => $vendorDir . '/phpspec/php-diff/lib/Diff.php',
  ...
  135      'File_Iterator_Facade' => $vendorDir . '/phpunit/php-file-iterator/src/Facade.php',
  136      'File_Iterator_Factory' => $vendorDir . '/phpunit/php-file-iterator/src/Factory.php',
  137:     'Fixed_Positioner' => $vendorDir . '/dompdf/dompdf/include/fixed_positioner.cls.php',
  138      'Font' => $vendorDir . '/phenx/php-font-lib/classes/Font.php',
  139      'Font_Binary_Stream' => $vendorDir . '/phenx/php-font-lib/classes/Font_Binary_Stream.php',
  ...
  145      'Font_Glyph_Outline_Simple' => $vendorDir . '/phenx/php-font-lib/classes/Font_Glyph_Outline_Simple.php',
  146      'Font_Header' => $vendorDir . '/phenx/php-font-lib/classes/Font_Header.php',
  147:     'Font_Metrics' => $vendorDir . '/dompdf/dompdf/include/font_metrics.cls.php',
  148      'Font_OpenType' => $vendorDir . '/phenx/php-font-lib/classes/Font_OpenType.php',
  149      'Font_OpenType_Table_Directory_Entry' => $vendorDir . '/phenx/php-font-lib/classes/Font_OpenType_Table_Directory_Entry.php',
  ...
  169      'Font_WOFF_Header' => $vendorDir . '/phenx/php-font-lib/classes/Font_WOFF_Header.php',
  170      'Font_WOFF_Table_Directory_Entry' => $vendorDir . '/phenx/php-font-lib/classes/Font_WOFF_Table_Directory_Entry.php',
  171:     'Frame' => $vendorDir . '/dompdf/dompdf/include/frame.cls.php',
  172:     'FrameList' => $vendorDir . '/dompdf/dompdf/include/frame.cls.php',
  173:     'FrameListIterator' => $vendorDir . '/dompdf/dompdf/include/frame.cls.php',
  174:     'FrameTreeIterator' => $vendorDir . '/dompdf/dompdf/include/frame.cls.php',
  175:     'FrameTreeList' => $vendorDir . '/dompdf/dompdf/include/frame.cls.php',
  176:     'Frame_Decorator' => $vendorDir . '/dompdf/dompdf/include/frame_decorator.cls.php',
  177:     'Frame_Factory' => $vendorDir . '/dompdf/dompdf/include/frame_factory.cls.php',
  178:     'Frame_Reflower' => $vendorDir . '/dompdf/dompdf/include/frame_reflower.cls.php',
  179:     'Frame_Tree' => $vendorDir . '/dompdf/dompdf/include/frame_tree.cls.php',
  180:     'GD_Adapter' => $vendorDir . '/dompdf/dompdf/include/gd_adapter.cls.php',
  181      'IlluminateQueueClosure' => $vendorDir . '/laravel/framework/src/Illuminate/Queue/IlluminateQueueClosure.php',
  182      'Illuminate\\Auth\\AuthManager' => $vendorDir . '/laravel/framework/src/Illuminate/Auth/AuthManager.php',
  ...
  642      'Illuminate\\View\\ViewFinderInterface' => $vendorDir . '/laravel/framework/src/Illuminate/View/ViewFinderInterface.php',
  643      'Illuminate\\View\\ViewServiceProvider' => $vendorDir . '/laravel/framework/src/Illuminate/View/ViewServiceProvider.php',
  644:     'Image_Cache' => $vendorDir . '/dompdf/dompdf/include/image_cache.cls.php',
  645:     'Image_Frame_Decorator' => $vendorDir . '/dompdf/dompdf/include/image_frame_decorator.cls.php',
  646:     'Image_Frame_Reflower' => $vendorDir . '/dompdf/dompdf/include/image_frame_reflower.cls.php',
  647:     'Image_Renderer' => $vendorDir . '/dompdf/dompdf/include/image_renderer.cls.php',
  648:     'Inline_Frame_Decorator' => $vendorDir . '/dompdf/dompdf/include/inline_frame_decorator.cls.php',
  649:     'Inline_Frame_Reflower' => $vendorDir . '/dompdf/dompdf/include/inline_frame_reflower.cls.php',
  650:     'Inline_Positioner' => $vendorDir . '/dompdf/dompdf/include/inline_positioner.cls.php',
  651:     'Inline_Renderer' => $vendorDir . '/dompdf/dompdf/include/inline_renderer.cls.php',
  652      'JakubOnderka\\PhpConsoleColor\\ConsoleColor' => $vendorDir . '/jakub-onderka/php-console-color/src/JakubOnderka/PhpConsoleColor/ConsoleColor.php',
  653      'JakubOnderka\\PhpConsoleColor\\InvalidStyleException' => $vendorDir . '/jakub-onderka/php-console-color/src/JakubOnderka/PhpConsoleColor/InvalidStyleException.php',
  654      'JakubOnderka\\PhpConsoleHighlighter\\Highlighter' => $vendorDir . '/jakub-onderka/php-console-highlighter/src/JakubOnderka/PhpConsoleHighlighter/Highlighter.php',
  655:     'Javascript_Embedder' => $vendorDir . '/dompdf/dompdf/include/javascript_embedder.cls.php',
  656      'League\\Flysystem\\AdapterInterface' => $vendorDir . '/league/flysystem/src/AdapterInterface.php',
  657      'League\\Flysystem\\Adapter\\AbstractAdapter' => $vendorDir . '/league/flysystem/src/Adapter/AbstractAdapter.php',
  ...
  698      'League\\Flysystem\\Util\\MimeType' => $vendorDir . '/league/flysystem/src/Util/MimeType.php',
  699      'League\\Flysystem\\Util\\StreamHasher' => $vendorDir . '/league/flysystem/src/Util/StreamHasher.php',
  700:     'Line_Box' => $vendorDir . '/dompdf/dompdf/include/line_box.cls.php',
  701:     'List_Bullet_Frame_Decorator' => $vendorDir . '/dompdf/dompdf/include/list_bullet_frame_decorator.cls.php',
  702:     'List_Bullet_Frame_Reflower' => $vendorDir . '/dompdf/dompdf/include/list_bullet_frame_reflower.cls.php',
  703:     'List_Bullet_Image_Frame_Decorator' => $vendorDir . '/dompdf/dompdf/include/list_bullet_image_frame_decorator.cls.php',
  704:     'List_Bullet_Positioner' => $vendorDir . '/dompdf/dompdf/include/list_bullet_positioner.cls.php',
  705:     'List_Bullet_Renderer' => $vendorDir . '/dompdf/dompdf/include/list_bullet_renderer.cls.php',
  706      'Monolog\\ErrorHandler' => $vendorDir . '/monolog/monolog/src/Monolog/ErrorHandler.php',
  707      'Monolog\\Formatter\\ChromePHPFormatter' => $vendorDir . '/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php',
  ...
  792      'Monolog\\Processor\\WebProcessor' => $vendorDir . '/monolog/monolog/src/Monolog/Processor/WebProcessor.php',
  793      'Monolog\\Registry' => $vendorDir . '/monolog/monolog/src/Monolog/Registry.php',
  794:     'Null_Frame_Decorator' => $vendorDir . '/dompdf/dompdf/include/null_frame_decorator.cls.php',
  795:     'Null_Frame_Reflower' => $vendorDir . '/dompdf/dompdf/include/null_frame_reflower.cls.php',
  796:     'Null_Positioner' => $vendorDir . '/dompdf/dompdf/include/null_positioner.cls.php',
  797:     'PDFLib_Adapter' => $vendorDir . '/dompdf/dompdf/include/pdflib_adapter.cls.php',
  798      'PHPUnit_Exception' => $vendorDir . '/phpunit/phpunit/src/Exception.php',
  799      'PHPUnit_Extensions_GroupTestSuite' => $vendorDir . '/phpunit/phpunit/src/Extensions/GroupTestSuite.php',
  ...
  994      'PHP_CodeCoverage_Util' => $vendorDir . '/phpunit/php-code-coverage/src/CodeCoverage/Util.php',
  995      'PHP_CodeCoverage_Util_InvalidArgumentHelper' => $vendorDir . '/phpunit/php-code-coverage/src/CodeCoverage/Util/InvalidArgumentHelper.php',
  996:     'PHP_Evaluator' => $vendorDir . '/dompdf/dompdf/include/php_evaluator.cls.php',
  997      'PHP_Timer' => $vendorDir . '/phpunit/php-timer/src/Timer.php',
  998      'PHP_Token' => $vendorDir . '/phpunit/php-token-stream/src/Token.php',
  ...
 1194      'PHP_Token_YIELD' => $vendorDir . '/phpunit/php-token-stream/src/Token.php',
 1195      'PHP_Token_YIELD_FROM' => $vendorDir . '/phpunit/php-token-stream/src/Token.php',
 1196:     'Page_Cache' => $vendorDir . '/dompdf/dompdf/include/page_cache.cls.php',
 1197:     'Page_Frame_Decorator' => $vendorDir . '/dompdf/dompdf/include/page_frame_decorator.cls.php',
 1198:     'Page_Frame_Reflower' => $vendorDir . '/dompdf/dompdf/include/page_frame_reflower.cls.php',
 1199      'PhpSpec\\CodeAnalysis\\AccessInspectorInterface' => $vendorDir . '/phpspec/phpspec/src/PhpSpec/CodeAnalysis/AccessInspectorInterface.php',
 1200      'PhpSpec\\CodeAnalysis\\DisallowedScalarTypehintException' => $vendorDir . '/phpspec/phpspec/src/PhpSpec/CodeAnalysis/DisallowedScalarTypehintException.php',
 ....
 1431      'PhpSpec\\Wrapper\\Wrapper' => $vendorDir . '/phpspec/phpspec/src/PhpSpec/Wrapper/Wrapper.php',
 1432      'PhpSpec\\Wrapper\\WrapperInterface' => $vendorDir . '/phpspec/phpspec/src/PhpSpec/Wrapper/WrapperInterface.php',
 1433:     'Positioner' => $vendorDir . '/dompdf/dompdf/include/positioner.cls.php',
 1434      'Prophecy\\Argument' => $vendorDir . '/phpspec/prophecy/src/Prophecy/Argument.php',
 1435      'Prophecy\\Argument\\ArgumentsWildcard' => $vendorDir . '/phpspec/prophecy/src/Prophecy/Argument/ArgumentsWildcard.php',
 ....
 1647      'Psy\\VarDumper\\Presenter' => $vendorDir . '/psy/psysh/src/Psy/VarDumper/Presenter.php',
 1648      'Psy\\VarDumper\\PresenterAware' => $vendorDir . '/psy/psysh/src/Psy/VarDumper/PresenterAware.php',
 1649:     'Renderer' => $vendorDir . '/dompdf/dompdf/include/renderer.cls.php',
 1650      'SebastianBergmann\\Comparator\\ArrayComparator' => $vendorDir . '/sebastian/comparator/src/ArrayComparator.php',
 1651      'SebastianBergmann\\Comparator\\Comparator' => $vendorDir . '/sebastian/comparator/src/Comparator.php',
 ....
 1687      'Stringy\\StaticStringy' => $vendorDir . '/danielstjules/stringy/src/StaticStringy.php',
 1688      'Stringy\\Stringy' => $vendorDir . '/danielstjules/stringy/src/Stringy.php',
 1689:     'Style' => $vendorDir . '/dompdf/dompdf/include/style.cls.php',
 1690:     'Stylesheet' => $vendorDir . '/dompdf/dompdf/include/stylesheet.cls.php',
 1691      'SuperClosure\\Analyzer\\AstAnalyzer' => $vendorDir . '/jeremeamia/SuperClosure/src/Analyzer/AstAnalyzer.php',
 1692      'SuperClosure\\Analyzer\\ClosureAnalyzer' => $vendorDir . '/jeremeamia/SuperClosure/src/Analyzer/ClosureAnalyzer.php',
 ....
 2703      'Symfony\\Polyfill\\Util\\BinaryOnFuncOverload' => $vendorDir . '/symfony/polyfill-util/BinaryOnFuncOverload.php',
 2704      'Symfony\\Polyfill\\Util\\TestListener' => $vendorDir . '/symfony/polyfill-util/TestListener.php',
 2705:     'TCPDF_Adapter' => $vendorDir . '/dompdf/dompdf/include/tcpdf_adapter.cls.php',
 2706:     'Table_Cell_Frame_Decorator' => $vendorDir . '/dompdf/dompdf/include/table_cell_frame_decorator.cls.php',
 2707:     'Table_Cell_Frame_Reflower' => $vendorDir . '/dompdf/dompdf/include/table_cell_frame_reflower.cls.php',
 2708:     'Table_Cell_Positioner' => $vendorDir . '/dompdf/dompdf/include/table_cell_positioner.cls.php',
 2709:     'Table_Cell_Renderer' => $vendorDir . '/dompdf/dompdf/include/table_cell_renderer.cls.php',
 2710:     'Table_Frame_Decorator' => $vendorDir . '/dompdf/dompdf/include/table_frame_decorator.cls.php',
 2711:     'Table_Frame_Reflower' => $vendorDir . '/dompdf/dompdf/include/table_frame_reflower.cls.php',
 2712:     'Table_Row_Frame_Decorator' => $vendorDir . '/dompdf/dompdf/include/table_row_frame_decorator.cls.php',
 2713:     'Table_Row_Frame_Reflower' => $vendorDir . '/dompdf/dompdf/include/table_row_frame_reflower.cls.php',
 2714:     'Table_Row_Group_Frame_Decorator' => $vendorDir . '/dompdf/dompdf/include/table_row_group_frame_decorator.cls.php',
 2715:     'Table_Row_Group_Frame_Reflower' => $vendorDir . '/dompdf/dompdf/include/table_row_group_frame_reflower.cls.php',
 2716:     'Table_Row_Group_Renderer' => $vendorDir . '/dompdf/dompdf/include/table_row_group_renderer.cls.php',
 2717:     'Table_Row_Positioner' => $vendorDir . '/dompdf/dompdf/include/table_row_positioner.cls.php',
 2718      'TestCase' => $baseDir . '/tests/TestCase.php',
 2719:     'Text_Frame_Decorator' => $vendorDir . '/dompdf/dompdf/include/text_frame_decorator.cls.php',
 2720:     'Text_Frame_Reflower' => $vendorDir . '/dompdf/dompdf/include/text_frame_reflower.cls.php',
 2721:     'Text_Renderer' => $vendorDir . '/dompdf/dompdf/include/text_renderer.cls.php',
 2722      'Text_Template' => $vendorDir . '/phpunit/php-text-template/src/Template.php',
 2723      'Webmozart\\Assert\\Assert' => $vendorDir . '/webmozart/assert/src/Assert.php',

C:\virtualhost\empresasgrau\vendor\composer\autoload_psr4.php:
   25      'ClassPreloader\\' => array($vendorDir . '/classpreloader/classpreloader/src'),
   26      'Carbon\\' => array($vendorDir . '/nesbot/carbon/src/Carbon'),
   27:     'Barryvdh\\DomPDF\\' => array($vendorDir . '/barryvdh/laravel-dompdf/src'),
   28      'App\\' => array($baseDir . '/app'),
   29  );

C:\virtualhost\empresasgrau\vendor\composer\autoload_static.php:
  157          'Barryvdh\\DomPDF\\' => 
  158          array (
  159:             0 => __DIR__ . '/..' . '/barryvdh/laravel-dompdf/src',
  160          ),
  161          'App\\' => 
  ...
  267  
  268      public static $classMap = array (
  269:         'Absolute_Positioner' => __DIR__ . '/..' . '/dompdf/dompdf/include/absolute_positioner.cls.php',
  270:         'Abstract_Renderer' => __DIR__ . '/..' . '/dompdf/dompdf/include/abstract_renderer.cls.php',
  271          'Adobe_Font_Metrics' => __DIR__ . '/..' . '/phenx/php-font-lib/classes/Adobe_Font_Metrics.php',
  272          'App\\Agregado' => __DIR__ . '/../..' . '/app/Agregado.php',
  ...
  315          'App\\Services\\Registrar' => __DIR__ . '/../..' . '/app/Services/Registrar.php',
  316          'App\\User' => __DIR__ . '/../..' . '/app/User.php',
  317:         'Attribute_Translator' => __DIR__ . '/..' . '/dompdf/dompdf/include/attribute_translator.cls.php',
  318:         'Barryvdh\\DomPDF\\Facade' => __DIR__ . '/..' . '/barryvdh/laravel-dompdf/src/Facade.php',
  319:         'Barryvdh\\DomPDF\\PDF' => __DIR__ . '/..' . '/barryvdh/laravel-dompdf/src/PDF.php',
  320:         'Barryvdh\\DomPDF\\ServiceProvider' => __DIR__ . '/..' . '/barryvdh/laravel-dompdf/src/ServiceProvider.php',
  321:         'Block_Frame_Decorator' => __DIR__ . '/..' . '/dompdf/dompdf/include/block_frame_decorator.cls.php',
  322:         'Block_Frame_Reflower' => __DIR__ . '/..' . '/dompdf/dompdf/include/block_frame_reflower.cls.php',
  323:         'Block_Positioner' => __DIR__ . '/..' . '/dompdf/dompdf/include/block_positioner.cls.php',
  324:         'Block_Renderer' => __DIR__ . '/..' . '/dompdf/dompdf/include/block_renderer.cls.php',
  325:         'CPDF_Adapter' => __DIR__ . '/..' . '/dompdf/dompdf/include/cpdf_adapter.cls.php',
  326:         'CSS_Color' => __DIR__ . '/..' . '/dompdf/dompdf/include/css_color.cls.php',
  327:         'Cached_PDF_Decorator' => __DIR__ . '/..' . '/dompdf/dompdf/include/cached_pdf_decorator.cls.php',
  328:         'Canvas' => __DIR__ . '/..' . '/dompdf/dompdf/include/canvas.cls.php',
  329:         'Canvas_Factory' => __DIR__ . '/..' . '/dompdf/dompdf/include/canvas_factory.cls.php',
  330          'Carbon\\Carbon' => __DIR__ . '/..' . '/nesbot/carbon/src/Carbon/Carbon.php',
  331          'Carbon\\CarbonInterval' => __DIR__ . '/..' . '/nesbot/carbon/src/Carbon/CarbonInterval.php',
  332:         'Cellmap' => __DIR__ . '/..' . '/dompdf/dompdf/include/cellmap.cls.php',
  333          'ClassPreloader\\Application' => __DIR__ . '/..' . '/classpreloader/classpreloader/src/Application.php',
  334          'ClassPreloader\\ClassList' => __DIR__ . '/..' . '/classpreloader/classpreloader/src/ClassList.php',
  ...
  365          'Cron\\MonthField' => __DIR__ . '/..' . '/mtdowling/cron-expression/src/Cron/MonthField.php',
  366          'Cron\\YearField' => __DIR__ . '/..' . '/mtdowling/cron-expression/src/Cron/YearField.php',
  367:         'DOMPDF' => __DIR__ . '/..' . '/dompdf/dompdf/include/dompdf.cls.php',
  368:         'DOMPDF_Exception' => __DIR__ . '/..' . '/dompdf/dompdf/include/dompdf_exception.cls.php',
  369:         'DOMPDF_Image_Exception' => __DIR__ . '/..' . '/dompdf/dompdf/include/dompdf_image_exception.cls.php',
  370          'DatabaseSeeder' => __DIR__ . '/../..' . '/database/seeds/DatabaseSeeder.php',
  371          'Diff' => __DIR__ . '/..' . '/phpspec/php-diff/lib/Diff.php',
  ...
  395          'File_Iterator_Facade' => __DIR__ . '/..' . '/phpunit/php-file-iterator/src/Facade.php',
  396          'File_Iterator_Factory' => __DIR__ . '/..' . '/phpunit/php-file-iterator/src/Factory.php',
  397:         'Fixed_Positioner' => __DIR__ . '/..' . '/dompdf/dompdf/include/fixed_positioner.cls.php',
  398          'Font' => __DIR__ . '/..' . '/phenx/php-font-lib/classes/Font.php',
  399          'Font_Binary_Stream' => __DIR__ . '/..' . '/phenx/php-font-lib/classes/Font_Binary_Stream.php',
  ...
  405          'Font_Glyph_Outline_Simple' => __DIR__ . '/..' . '/phenx/php-font-lib/classes/Font_Glyph_Outline_Simple.php',
  406          'Font_Header' => __DIR__ . '/..' . '/phenx/php-font-lib/classes/Font_Header.php',
  407:         'Font_Metrics' => __DIR__ . '/..' . '/dompdf/dompdf/include/font_metrics.cls.php',
  408          'Font_OpenType' => __DIR__ . '/..' . '/phenx/php-font-lib/classes/Font_OpenType.php',
  409          'Font_OpenType_Table_Directory_Entry' => __DIR__ . '/..' . '/phenx/php-font-lib/classes/Font_OpenType_Table_Directory_Entry.php',
  ...
  429          'Font_WOFF_Header' => __DIR__ . '/..' . '/phenx/php-font-lib/classes/Font_WOFF_Header.php',
  430          'Font_WOFF_Table_Directory_Entry' => __DIR__ . '/..' . '/phenx/php-font-lib/classes/Font_WOFF_Table_Directory_Entry.php',
  431:         'Frame' => __DIR__ . '/..' . '/dompdf/dompdf/include/frame.cls.php',
  432:         'FrameList' => __DIR__ . '/..' . '/dompdf/dompdf/include/frame.cls.php',
  433:         'FrameListIterator' => __DIR__ . '/..' . '/dompdf/dompdf/include/frame.cls.php',
  434:         'FrameTreeIterator' => __DIR__ . '/..' . '/dompdf/dompdf/include/frame.cls.php',
  435:         'FrameTreeList' => __DIR__ . '/..' . '/dompdf/dompdf/include/frame.cls.php',
  436:         'Frame_Decorator' => __DIR__ . '/..' . '/dompdf/dompdf/include/frame_decorator.cls.php',
  437:         'Frame_Factory' => __DIR__ . '/..' . '/dompdf/dompdf/include/frame_factory.cls.php',
  438:         'Frame_Reflower' => __DIR__ . '/..' . '/dompdf/dompdf/include/frame_reflower.cls.php',
  439:         'Frame_Tree' => __DIR__ . '/..' . '/dompdf/dompdf/include/frame_tree.cls.php',
  440:         'GD_Adapter' => __DIR__ . '/..' . '/dompdf/dompdf/include/gd_adapter.cls.php',
  441          'IlluminateQueueClosure' => __DIR__ . '/..' . '/laravel/framework/src/Illuminate/Queue/IlluminateQueueClosure.php',
  442          'Illuminate\\Auth\\AuthManager' => __DIR__ . '/..' . '/laravel/framework/src/Illuminate/Auth/AuthManager.php',
  ...
  902          'Illuminate\\View\\ViewFinderInterface' => __DIR__ . '/..' . '/laravel/framework/src/Illuminate/View/ViewFinderInterface.php',
  903          'Illuminate\\View\\ViewServiceProvider' => __DIR__ . '/..' . '/laravel/framework/src/Illuminate/View/ViewServiceProvider.php',
  904:         'Image_Cache' => __DIR__ . '/..' . '/dompdf/dompdf/include/image_cache.cls.php',
  905:         'Image_Frame_Decorator' => __DIR__ . '/..' . '/dompdf/dompdf/include/image_frame_decorator.cls.php',
  906:         'Image_Frame_Reflower' => __DIR__ . '/..' . '/dompdf/dompdf/include/image_frame_reflower.cls.php',
  907:         'Image_Renderer' => __DIR__ . '/..' . '/dompdf/dompdf/include/image_renderer.cls.php',
  908:         'Inline_Frame_Decorator' => __DIR__ . '/..' . '/dompdf/dompdf/include/inline_frame_decorator.cls.php',
  909:         'Inline_Frame_Reflower' => __DIR__ . '/..' . '/dompdf/dompdf/include/inline_frame_reflower.cls.php',
  910:         'Inline_Positioner' => __DIR__ . '/..' . '/dompdf/dompdf/include/inline_positioner.cls.php',
  911:         'Inline_Renderer' => __DIR__ . '/..' . '/dompdf/dompdf/include/inline_renderer.cls.php',
  912          'JakubOnderka\\PhpConsoleColor\\ConsoleColor' => __DIR__ . '/..' . '/jakub-onderka/php-console-color/src/JakubOnderka/PhpConsoleColor/ConsoleColor.php',
  913          'JakubOnderka\\PhpConsoleColor\\InvalidStyleException' => __DIR__ . '/..' . '/jakub-onderka/php-console-color/src/JakubOnderka/PhpConsoleColor/InvalidStyleException.php',
  914          'JakubOnderka\\PhpConsoleHighlighter\\Highlighter' => __DIR__ . '/..' . '/jakub-onderka/php-console-highlighter/src/JakubOnderka/PhpConsoleHighlighter/Highlighter.php',
  915:         'Javascript_Embedder' => __DIR__ . '/..' . '/dompdf/dompdf/include/javascript_embedder.cls.php',
  916          'League\\Flysystem\\AdapterInterface' => __DIR__ . '/..' . '/league/flysystem/src/AdapterInterface.php',
  917          'League\\Flysystem\\Adapter\\AbstractAdapter' => __DIR__ . '/..' . '/league/flysystem/src/Adapter/AbstractAdapter.php',
  ...
  958          'League\\Flysystem\\Util\\MimeType' => __DIR__ . '/..' . '/league/flysystem/src/Util/MimeType.php',
  959          'League\\Flysystem\\Util\\StreamHasher' => __DIR__ . '/..' . '/league/flysystem/src/Util/StreamHasher.php',
  960:         'Line_Box' => __DIR__ . '/..' . '/dompdf/dompdf/include/line_box.cls.php',
  961:         'List_Bullet_Frame_Decorator' => __DIR__ . '/..' . '/dompdf/dompdf/include/list_bullet_frame_decorator.cls.php',
  962:         'List_Bullet_Frame_Reflower' => __DIR__ . '/..' . '/dompdf/dompdf/include/list_bullet_frame_reflower.cls.php',
  963:         'List_Bullet_Image_Frame_Decorator' => __DIR__ . '/..' . '/dompdf/dompdf/include/list_bullet_image_frame_decorator.cls.php',
  964:         'List_Bullet_Positioner' => __DIR__ . '/..' . '/dompdf/dompdf/include/list_bullet_positioner.cls.php',
  965:         'List_Bullet_Renderer' => __DIR__ . '/..' . '/dompdf/dompdf/include/list_bullet_renderer.cls.php',
  966          'Monolog\\ErrorHandler' => __DIR__ . '/..' . '/monolog/monolog/src/Monolog/ErrorHandler.php',
  967          'Monolog\\Formatter\\ChromePHPFormatter' => __DIR__ . '/..' . '/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php',
  ...
 1052          'Monolog\\Processor\\WebProcessor' => __DIR__ . '/..' . '/monolog/monolog/src/Monolog/Processor/WebProcessor.php',
 1053          'Monolog\\Registry' => __DIR__ . '/..' . '/monolog/monolog/src/Monolog/Registry.php',
 1054:         'Null_Frame_Decorator' => __DIR__ . '/..' . '/dompdf/dompdf/include/null_frame_decorator.cls.php',
 1055:         'Null_Frame_Reflower' => __DIR__ . '/..' . '/dompdf/dompdf/include/null_frame_reflower.cls.php',
 1056:         'Null_Positioner' => __DIR__ . '/..' . '/dompdf/dompdf/include/null_positioner.cls.php',
 1057:         'PDFLib_Adapter' => __DIR__ . '/..' . '/dompdf/dompdf/include/pdflib_adapter.cls.php',
 1058          'PHPUnit_Exception' => __DIR__ . '/..' . '/phpunit/phpunit/src/Exception.php',
 1059          'PHPUnit_Extensions_GroupTestSuite' => __DIR__ . '/..' . '/phpunit/phpunit/src/Extensions/GroupTestSuite.php',
 ....
 1254          'PHP_CodeCoverage_Util' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/CodeCoverage/Util.php',
 1255          'PHP_CodeCoverage_Util_InvalidArgumentHelper' => __DIR__ . '/..' . '/phpunit/php-code-coverage/src/CodeCoverage/Util/InvalidArgumentHelper.php',
 1256:         'PHP_Evaluator' => __DIR__ . '/..' . '/dompdf/dompdf/include/php_evaluator.cls.php',
 1257          'PHP_Timer' => __DIR__ . '/..' . '/phpunit/php-timer/src/Timer.php',
 1258          'PHP_Token' => __DIR__ . '/..' . '/phpunit/php-token-stream/src/Token.php',
 ....
 1454          'PHP_Token_YIELD' => __DIR__ . '/..' . '/phpunit/php-token-stream/src/Token.php',
 1455          'PHP_Token_YIELD_FROM' => __DIR__ . '/..' . '/phpunit/php-token-stream/src/Token.php',
 1456:         'Page_Cache' => __DIR__ . '/..' . '/dompdf/dompdf/include/page_cache.cls.php',
 1457:         'Page_Frame_Decorator' => __DIR__ . '/..' . '/dompdf/dompdf/include/page_frame_decorator.cls.php',
 1458:         'Page_Frame_Reflower' => __DIR__ . '/..' . '/dompdf/dompdf/include/page_frame_reflower.cls.php',
 1459          'PhpSpec\\CodeAnalysis\\AccessInspectorInterface' => __DIR__ . '/..' . '/phpspec/phpspec/src/PhpSpec/CodeAnalysis/AccessInspectorInterface.php',
 1460          'PhpSpec\\CodeAnalysis\\DisallowedScalarTypehintException' => __DIR__ . '/..' . '/phpspec/phpspec/src/PhpSpec/CodeAnalysis/DisallowedScalarTypehintException.php',
 ....
 1691          'PhpSpec\\Wrapper\\Wrapper' => __DIR__ . '/..' . '/phpspec/phpspec/src/PhpSpec/Wrapper/Wrapper.php',
 1692          'PhpSpec\\Wrapper\\WrapperInterface' => __DIR__ . '/..' . '/phpspec/phpspec/src/PhpSpec/Wrapper/WrapperInterface.php',
 1693:         'Positioner' => __DIR__ . '/..' . '/dompdf/dompdf/include/positioner.cls.php',
 1694          'Prophecy\\Argument' => __DIR__ . '/..' . '/phpspec/prophecy/src/Prophecy/Argument.php',
 1695          'Prophecy\\Argument\\ArgumentsWildcard' => __DIR__ . '/..' . '/phpspec/prophecy/src/Prophecy/Argument/ArgumentsWildcard.php',
 ....
 1907          'Psy\\VarDumper\\Presenter' => __DIR__ . '/..' . '/psy/psysh/src/Psy/VarDumper/Presenter.php',
 1908          'Psy\\VarDumper\\PresenterAware' => __DIR__ . '/..' . '/psy/psysh/src/Psy/VarDumper/PresenterAware.php',
 1909:         'Renderer' => __DIR__ . '/..' . '/dompdf/dompdf/include/renderer.cls.php',
 1910          'SebastianBergmann\\Comparator\\ArrayComparator' => __DIR__ . '/..' . '/sebastian/comparator/src/ArrayComparator.php',
 1911          'SebastianBergmann\\Comparator\\Comparator' => __DIR__ . '/..' . '/sebastian/comparator/src/Comparator.php',
 ....
 1947          'Stringy\\StaticStringy' => __DIR__ . '/..' . '/danielstjules/stringy/src/StaticStringy.php',
 1948          'Stringy\\Stringy' => __DIR__ . '/..' . '/danielstjules/stringy/src/Stringy.php',
 1949:         'Style' => __DIR__ . '/..' . '/dompdf/dompdf/include/style.cls.php',
 1950:         'Stylesheet' => __DIR__ . '/..' . '/dompdf/dompdf/include/stylesheet.cls.php',
 1951          'SuperClosure\\Analyzer\\AstAnalyzer' => __DIR__ . '/..' . '/jeremeamia/SuperClosure/src/Analyzer/AstAnalyzer.php',
 1952          'SuperClosure\\Analyzer\\ClosureAnalyzer' => __DIR__ . '/..' . '/jeremeamia/SuperClosure/src/Analyzer/ClosureAnalyzer.php',
 ....
 2963          'Symfony\\Polyfill\\Util\\BinaryOnFuncOverload' => __DIR__ . '/..' . '/symfony/polyfill-util/BinaryOnFuncOverload.php',
 2964          'Symfony\\Polyfill\\Util\\TestListener' => __DIR__ . '/..' . '/symfony/polyfill-util/TestListener.php',
 2965:         'TCPDF_Adapter' => __DIR__ . '/..' . '/dompdf/dompdf/include/tcpdf_adapter.cls.php',
 2966:         'Table_Cell_Frame_Decorator' => __DIR__ . '/..' . '/dompdf/dompdf/include/table_cell_frame_decorator.cls.php',
 2967:         'Table_Cell_Frame_Reflower' => __DIR__ . '/..' . '/dompdf/dompdf/include/table_cell_frame_reflower.cls.php',
 2968:         'Table_Cell_Positioner' => __DIR__ . '/..' . '/dompdf/dompdf/include/table_cell_positioner.cls.php',
 2969:         'Table_Cell_Renderer' => __DIR__ . '/..' . '/dompdf/dompdf/include/table_cell_renderer.cls.php',
 2970:         'Table_Frame_Decorator' => __DIR__ . '/..' . '/dompdf/dompdf/include/table_frame_decorator.cls.php',
 2971:         'Table_Frame_Reflower' => __DIR__ . '/..' . '/dompdf/dompdf/include/table_frame_reflower.cls.php',
 2972:         'Table_Row_Frame_Decorator' => __DIR__ . '/..' . '/dompdf/dompdf/include/table_row_frame_decorator.cls.php',
 2973:         'Table_Row_Frame_Reflower' => __DIR__ . '/..' . '/dompdf/dompdf/include/table_row_frame_reflower.cls.php',
 2974:         'Table_Row_Group_Frame_Decorator' => __DIR__ . '/..' . '/dompdf/dompdf/include/table_row_group_frame_decorator.cls.php',
 2975:         'Table_Row_Group_Frame_Reflower' => __DIR__ . '/..' . '/dompdf/dompdf/include/table_row_group_frame_reflower.cls.php',
 2976:         'Table_Row_Group_Renderer' => __DIR__ . '/..' . '/dompdf/dompdf/include/table_row_group_renderer.cls.php',
 2977:         'Table_Row_Positioner' => __DIR__ . '/..' . '/dompdf/dompdf/include/table_row_positioner.cls.php',
 2978          'TestCase' => __DIR__ . '/../..' . '/tests/TestCase.php',
 2979:         'Text_Frame_Decorator' => __DIR__ . '/..' . '/dompdf/dompdf/include/text_frame_decorator.cls.php',
 2980:         'Text_Frame_Reflower' => __DIR__ . '/..' . '/dompdf/dompdf/include/text_frame_reflower.cls.php',
 2981:         'Text_Renderer' => __DIR__ . '/..' . '/dompdf/dompdf/include/text_renderer.cls.php',
 2982          'Text_Template' => __DIR__ . '/..' . '/phpunit/php-text-template/src/Template.php',
 2983          'Webmozart\\Assert\\Assert' => __DIR__ . '/..' . '/webmozart/assert/src/Assert.php',

C:\virtualhost\empresasgrau\vendor\composer\installed.json:
 3336      },
 3337      {
 3338:         "name": "dompdf/dompdf",
 3339          "version": "v0.6.2",
 3340          "version_normalized": "0.6.2.0",
 3341          "source": {
 3342              "type": "git",
 3343:             "url": "https://github.com/dompdf/dompdf.git",
 3344              "reference": "cc06008f75262510ee135b8cbb14e333a309f651"
 3345          },
 3346          "dist": {
 3347              "type": "zip",
 3348:             "url": "https://api.github.com/repos/dompdf/dompdf/zipball/cc06008f75262510ee135b8cbb14e333a309f651",
 3349              "reference": "cc06008f75262510ee135b8cbb14e333a309f651",
 3350              "shasum": ""
 ....
 3376          ],
 3377          "description": "DOMPDF is a CSS 2.1 compliant HTML to PDF converter",
 3378:         "homepage": "https://github.com/dompdf/dompdf"
 3379      },
 3380      {
 3381:         "name": "barryvdh/laravel-dompdf",
 3382          "version": "v0.6.1",
 3383          "version_normalized": "0.6.1.0",
 3384          "source": {
 3385              "type": "git",
 3386:             "url": "https://github.com/barryvdh/laravel-dompdf.git",
 3387              "reference": "b606788108833f7765801dca35455fb23ce9f869"
 3388          },
 3389          "dist": {
 3390              "type": "zip",
 3391:             "url": "https://api.github.com/repos/barryvdh/laravel-dompdf/zipball/b606788108833f7765801dca35455fb23ce9f869",
 3392              "reference": "b606788108833f7765801dca35455fb23ce9f869",
 3393              "shasum": ""
 3394          },
 3395          "require": {
 3396:             "dompdf/dompdf": "0.6.*",
 3397              "illuminate/support": "5.0.x|5.1.x|5.2.x",
 3398              "php": ">=5.4.0"
 ....
 3423          "description": "A DOMPDF Wrapper for Laravel",
 3424          "keywords": [
 3425:             "dompdf",
 3426              "laravel",
 3427              "pdf"

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\composer.json:
    1  {
    2:     "name": "dompdf/dompdf",
    3      "type": "library",
    4      "description": "DOMPDF is a CSS 2.1 compliant HTML to PDF converter",
    5:     "homepage": "https://github.com/dompdf/dompdf",
    6      "license": "LGPL",
    7      "authors": [

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\CONTRIBUTING.md:
    8  
    9  Community discussion, questions, and informal bug reporting is done on the
   10: [dompdf Google group](http://groups.google.com/group/dompdf). You may also 
   11  seek help on
   12: [StackOverflow](http://stackoverflow.com/questions/tagged/dompdf).
   13  
   14  ## Submitting bug reports
   15  
   16  The preferred way to report bugs is to use the
   17: [GitHub issue tracker](http://github.com/dompdf/dompdf/issues). Before 
   18  reporting a bug, read these pointers.
   19  
   ..
   22  **Note:** The issue tracker is for *bugs* and *feature requests*, not requests for help.
   23  Questions should be asked on the
   24: [dompdf Google group](http://groups.google.com/group/dompdf) instead.
   25  
   26  ### Reporting bugs effectively
   27  
   28: - dompdf is maintained by volunteers. They don't owe you anything, so be
   29    polite. Reports with an indignant or belligerent tone tend to be moved to the
   30    bottom of the pile.
   ..
   36    and server error logs (like Apache logs)
   37  
   38: - Mention which release of dompdf you're using (the zip, the master branch, etc).
   39    Preferably, try also with the current development snapshot, to ensure the
   40    problem has not already been fixed.
   ..
   46  
   47  - If the problem can not be reproduced in any of the demos included in the
   48:   dompdf distribution, please provide an HTML document that demonstrates
   49    the problem. There are a few options to show us your code:
   50     - [JS Fiddle](http://jsfiddle.net/)
   51:    - [dompdf debug helper](http://eclecticgeek.com/dompdf/debug.php) (provided by @bsweeney)
   52     - Include the HTML/CSS inside the bug report, with
   53     [code highlighting](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#wiki-code).
   ..
   56  
   57  - Make sure you have a [GitHub Account](https://github.com/signup/free)
   58: - Fork [dompdf](https://github.com/dompdf/dompdf/)
   59    ([how to fork a repo](https://help.github.com/articles/fork-a-repo))
   60  - *Make your changes on the dev branch* or the most appropriate feature branch. Please only patch 

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\dompdf.php:
    1  <?php
    2  /**
    3:  * Command line utility to use dompdf.
    4   * Can also be used with HTTP GET parameters
    5   * 
    6:  * @package dompdf
    7:  * @link    http://dompdf.github.com/
    8   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    9   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
   ..
   13   * Display command line usage
   14   */
   15: function dompdf_usage() {
   16    $default_paper_size = DOMPDF_DEFAULT_PAPER_SIZE;
   17    
   ..
  124  }
  125  
  126: require_once("dompdf_config.inc.php");
  127: global $_dompdf_show_warnings, $_dompdf_debug, $_DOMPDF_DEBUG_TYPES;
  128  
  129  $sapi = php_sapi_name();
  130  $options = array();
  131  
  132: $dompdf = new DOMPDF();
  133  
  134  switch ( $sapi ) {
  ...
  139  
  140    if ( isset($opts["h"]) || (!isset($opts["filename"]) && !isset($opts["l"])) ) {
  141:     dompdf_usage();
  142      exit;
  143    }
  ...
  169    else {
  170      if ( $file === "-" )
  171:       $outfile = "dompdf_out.pdf";
  172      else
  173        $outfile = str_ireplace(array(".html", ".htm"), "", $file) . ".pdf";
  ...
  175  
  176    if ( isset($opts["v"]) )
  177:     $_dompdf_show_warnings = true;
  178  
  179    if ( isset($opts["d"]) ) {
  180:     $_dompdf_show_warnings = true;
  181:     $_dompdf_debug = true;
  182    }
  183  
  ...
  196   default:
  197  
  198:   $dompdf->set_option('enable_php', false);
  199    
  200    if ( isset($_GET["input_file"]) )
  ...
  224    $file_parts = explode_url($file);
  225    
  226:   $outfile = "dompdf_out.pdf"; # Don't allow them to set the output file
  227    $save_file = false; # Don't save the file
  228    
  ...
  235      $str .= fread(STDIN, 4096);
  236  
  237:   $dompdf->load_html($str);
  238  
  239  } else
  240:   $dompdf->load_html_file($file);
  241  
  242  if ( isset($base_path) ) {
  243:   $dompdf->set_base_path($base_path);
  244  }
  245  
  246: $dompdf->set_paper($paper, $orientation);
  247  
  248: $dompdf->render();
  249  
  250: if ( $_dompdf_show_warnings ) {
  251:   global $_dompdf_warnings;
  252:   foreach ($_dompdf_warnings as $msg)
  253      echo $msg . "\n";
  254:   echo $dompdf->get_canvas()->get_cpdf()->messages;
  255    flush();
  256  }
  ...
  271      throw new DOMPDF_Exception("Permission denied.");
  272  
  273:   file_put_contents($outfile, $dompdf->output( array("compress" => 0) ));
  274    exit(0);
  275  }
  276  
  277  if ( !headers_sent() ) {
  278:   $dompdf->stream($outfile, $options);
  279  }
  280  

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\dompdf_config.custom.inc.php:
    1  <?php
    2: // Please refer to dompdf_config.inc.php for details on each configuration option.
    3  
    4  //define("DOMPDF_TEMP_DIR", "/tmp");
    .
   26  //define("DOMPDF_ENABLE_FONTSUBSETTING", true);
   27  
   28: // Authentication for the dompdf/www
   29  //define("DOMPDF_ADMIN_USERNAME", "user");
   30  //define("DOMPDF_ADMIN_PASSWORD", "password");
   ..
   34   * The following settings may increase the risk of system exploit.
   35   * Do not change these settings without understanding the consequences.
   36:  * Additional documentation is available on the dompdf wiki at:
   37:  * https://github.com/dompdf/dompdf/wiki
   38   */
   39  //define("DOMPDF_CHROOT", DOMPDF_DIR);

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\dompdf_config.inc.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Helmut Tischer <htischer@weihenstephan.org>
    .
   45  
   46  /** Include the custom config file if it exists */
   47: if ( file_exists(DOMPDF_DIR . "/dompdf_config.custom.inc.php") ){
   48:   require_once(DOMPDF_DIR . "/dompdf_config.custom.inc.php");
   49  }
   50  
   ..
  106   * ==== IMPORTANT ====
  107   *
  108:  * dompdf's "chroot": Prevents dompdf from accessing system files or other
  109:  * files on the webserver.  All local files opened by dompdf must be in a
  110   * subdirectory of this directory.  DO NOT set it to '/' since this could
  111:  * allow an attacker to use dompdf to read any files on the server.  This
  112   * should be an absolute path.
  113:  * This is only checked on command line call by dompdf.php, but not by
  114   * direct class use like:
  115:  * $dompdf = new DOMPDF();	$dompdf->load_html($htmldata); $dompdf->render(); $pdfdata = $dompdf->output();
  116   */
  117  def("DOMPDF_CHROOT", realpath(DOMPDF_DIR));
  ...
  123   * loaded via load_font.php.
  124   *
  125:  * When enabled, dompdf can support all Unicode glyphs. Any glyphs used in a
  126   * document must be present in your fonts, however.
  127   */
  ...
  143   *
  144   * Both PDFLib & CPDF rendering backends provide sufficient rendering
  145:  * capabilities for dompdf, however additional features (e.g. object,
  146   * image and font support, etc.) differ between backends.  Please see
  147   * {@link PDFLib_Adapter} for more information on the PDFLib backend
  ...
  250   * Enabling this for documents you do not trust (e.g. arbitrary remote html
  251   * pages) is a security risk. Inline scripts are run with the same level of
  252:  * system access available to dompdf. Set this option to false (recommended)
  253   * if you wish to process untrusted documents.
  254   *
  ...
  276   * Attention!
  277   * This can be a security risk, in particular in combination with DOMPDF_ENABLE_PHP and
  278:  * allowing remote access to dompdf.php or on allowing remote html code to be passed to
  279:  * $dompdf = new DOMPDF(); $dompdf->load_html(...);
  280   * This allows anonymous users to download legally doubtful internet content which on
  281   * tracing back appears to being downloaded by your server, or allows malicious php code
  ...
  346   * @var array
  347   */
  348: global $_dompdf_warnings;
  349: $_dompdf_warnings = array();
  350  
  351  /**
  352:  * If true, $_dompdf_warnings is dumped on script termination when using
  353:  * dompdf/dompdf.php or after rendering when using the DOMPDF class.
  354   * When using the class, setting this value to true will prevent you from
  355   * streaming the PDF.
  ...
  357   * @var bool
  358   */
  359: global $_dompdf_show_warnings;
  360: $_dompdf_show_warnings = false;
  361  
  362  /**
  363:  * If true, the entire tree is dumped to stdout in dompdf.cls.php.
  364   * Setting this value to true will prevent you from streaming the PDF.
  365   *
  366   * @var bool
  367   */
  368: global $_dompdf_debug;
  369: $_dompdf_debug = false;
  370  
  371  /**

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\absolute_positioner.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\abstract_renderer.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Helmut Tischer <htischer@weihenstephan.org>
    .
   13   *
   14   * @access private
   15:  * @package dompdf
   16   */
   17  abstract class Abstract_Renderer {
   ..
   25  
   26    /**
   27:    * Current dompdf instance
   28     *
   29     * @var DOMPDF
   30     */
   31:   protected $_dompdf;
   32    
   33    /**
   34     * Class constructor
   35     *
   36:    * @param DOMPDF $dompdf The current dompdf instance
   37     */
   38:   function __construct(DOMPDF $dompdf) {
   39:     $this->_dompdf = $dompdf;
   40:     $this->_canvas = $dompdf->get_canvas();
   41    }
   42    
   ..
   87        $sheet->get_host(),
   88        $sheet->get_base_path(),
   89:       $this->_dompdf
   90      );
   91  
   ..
  101      //$img_w = imagesx($src); $img_h = imagesy($src);
  102  
  103:     list($img_w, $img_h) = dompdf_getimagesize($img, $this->_dompdf->get_http_context());
  104      if (!isset($img_w) || $img_w == 0 || !isset($img_h) || $img_h == 0) {
  105        return;
  ...
  107  
  108      $repeat = $style->background_repeat;
  109:     $dpi = $this->_dompdf->get_option("dpi");
  110  
  111      //Increase background resolution and dependent box size according to image resolution to be placed in
  ...
  421      
  422      else {
  423:       $tmp_dir = $this->_dompdf->get_option("temp_dir");
  424:       $tmp_name = tempnam($tmp_dir, "bg_dompdf_img_");
  425        @unlink($tmp_name);
  426        $tmp_file = "$tmp_name.png";

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\attribute_translator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Fabien Ménager <fabien.menager@gmail.com>
    .
   11   * Translates HTML 4.0 attributes into CSS rules
   12   *
   13:  * @package dompdf
   14   */
   15  class Attribute_Translator {
   ..
  160      'ol' => array(
  161        'compact' => 'margin: 0.5em 0;',
  162:       'start'   => 'counter-reset: -dompdf-default-counter %d;',
  163        'type'    => 'list-style-type: %s;',
  164      ),
  ...
  169      'li' => array(
  170        'type'    => 'list-style-type: %s;',
  171:       'value'   => 'counter-reset: -dompdf-default-counter %d;',
  172      ),
  173      'pre' => array(

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\autoload.inc.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Fabien Ménager <fabien.menager@gmail.com>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\block_frame_decorator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Block_Frame_Decorator extends Frame_Decorator {
   ..
   28    protected $_line_boxes;
   29  
   30:   function __construct(Frame $frame, DOMPDF $dompdf) {
   31:     parent::__construct($frame, $dompdf);
   32      
   33      $this->_line_boxes = array(new Line_Box($this));

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\block_frame_reflower.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Fabien Ménager <fabien.menager@gmail.com>
    .
   12   *
   13   * @access private
   14:  * @package dompdf
   15   */
   16  class Block_Frame_Reflower extends Frame_Reflower {
   ..
  537          
  538          if ( !isset($canvas) ) {
  539:           $canvas = $frame->get_root()->get_dompdf()->get_canvas();
  540          }
  541          
  ...
  581     */
  582    function process_clear(Frame $child){
  583:     $enable_css_float = $this->get_dompdf()->get_option("enable_css_float");
  584      if ( !$enable_css_float ) {
  585        return;
  ...
  613     */
  614    function process_float(Frame $child, $cb_x, $cb_w){
  615:     $enable_css_float = $this->_frame->get_dompdf()->get_option("enable_css_float");
  616      if ( !$enable_css_float ) {
  617        return;

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\block_positioner.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Block_Positioner extends Positioner {
   ..
   29        $float = $style->float;
   30  
   31:       $enable_css_float = $frame->get_dompdf()->get_option("enable_css_float");
   32        if ( !$enable_css_float || !$float || $float === "none" ) {
   33          $p->add_line(true);

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\block_renderer.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Block_Renderer extends Abstract_Renderer {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cached_pdf_decorator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   18   *
   19   * @access private
   20:  * @package dompdf
   21   */
   22  class Cached_PDF_Decorator extends CPDF_Adapter implements Canvas {
   ..
   29    protected $_fonts;  // fonts used in this document
   30    
   31:   function __construct($paper = "letter", $orientation = "portrait", DOMPDF $dompdf) {
   32      $this->_fonts = array();
   33    }

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\canvas.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Fabien Ménager <fabien.menager@gmail.com>
    .
   19   * guarantee that the results will look any good.
   20   *
   21:  * @package dompdf
   22   */
   23  interface Canvas {
   24:   function __construct($paper = "letter", $orientation = "portrait", DOMPDF $dompdf);
   25  
   26    /**
   27     * @return DOMPDF
   28     */
   29:   function get_dompdf();
   30  
   31    /**

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\canvas_factory.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   13   * availability of rendering backends and config options.
   14   *
   15:  * @package dompdf
   16   */
   17  class Canvas_Factory {
   ..
   23  
   24    /**
   25:    * @param DOMPDF       $dompdf
   26     * @param string|array $paper
   27     * @param string       $orientation
   ..
   30     * @return Canvas
   31     */
   32:   static function get_instance(DOMPDF $dompdf, $paper = null, $orientation = null, $class = null) {
   33  
   34      $backend = strtolower(DOMPDF_PDF_BACKEND);
   ..
   59      }
   60  
   61:     return new $class($paper, $orientation, $dompdf);
   62    }
   63  }

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cellmap.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   14   *
   15   * @access private
   16:  * @package dompdf
   17   */
   18  class Cellmap {
   ..
  255    
  256    function get_frame_position(Frame $frame) {
  257:     global $_dompdf_warnings;
  258  
  259      $key = $frame->get_id();
  ...
  267  
  268      if ( !isset($this->_columns[$col])) {
  269:       $_dompdf_warnings[] = "Frame not found in columns array.  Check your table layout for missing or extra TDs.";
  270        $x = 0;
  271      }
  ...
  275  
  276      if ( !isset($this->_rows[$row])) {
  277:       $_dompdf_warnings[] = "Frame not found in row array.  Check your table layout for missing or extra TDs.";
  278        $y = 0;
  279      }

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\cpdf_adapter.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Orion Richardson <orionr@yahoo.com>
    .
   26   * on the underlying {@link Cpdf} class.
   27   *
   28:  * @package dompdf
   29   */
   30  class CPDF_Adapter implements Canvas {
   ..
   99     * @var DOMPDF
  100     */
  101:   private $_dompdf;
  102  
  103    /**
  ...
  162     * @param mixed  $paper       The size of paper to use in this PDF ({@link CPDF_Adapter::$PAPER_SIZES})
  163     * @param string $orientation The orientation of the document (either 'landscape' or 'portrait')
  164:    * @param DOMPDF $dompdf      The DOMPDF instance
  165     */
  166:   function __construct($paper = "letter", $orientation = "portrait", DOMPDF $dompdf) {
  167      if ( is_array($paper) ) {
  168        $size = $paper;
  ...
  179      }
  180  
  181:     $this->_dompdf = $dompdf;
  182      
  183      $this->_pdf = new Cpdf(
  184        $size,
  185:       $dompdf->get_option("enable_unicode"),
  186:       $dompdf->get_option("font_cache"),
  187:       $dompdf->get_option("temp_dir")
  188      );
  189  
  ...
  204    }
  205  
  206:   function get_dompdf(){
  207:     return $this->_dompdf;
  208    }
  209  
  ...
  512        imageinterlace($im, false);
  513  
  514:       $tmp_dir = $this->_dompdf->get_option("temp_dir");
  515:       $tmp_name = tempnam($tmp_dir, "{$image_type}dompdf_img_");
  516        @unlink($tmp_name);
  517        $filename = "$tmp_name.png";
  ...
  605  
  606    function image($img, $x, $y, $w, $h, $resolution = "normal") {
  607:     list($width, $height, $type) = dompdf_getimagesize($img, $this->_dompdf->get_http_context());
  608      
  609:     $debug_png = $this->_dompdf->get_option("debug_png");
  610  
  611      if ($debug_png) print "[image:$img|$width|$height|$type]";
  ...
  722      $this->_pdf->selectFont($font);
  723  
  724:     $unicode = $this->_dompdf->get_option("enable_unicode");
  725      if (!$unicode) {
  726        $text = mb_convert_encoding($text, 'Windows-1252', 'UTF-8');
  ...
  737      $this->_pdf->selectFont($font);
  738  
  739:     $ratio = $this->_dompdf->get_option("font_height_ratio");
  740      return $this->_pdf->getFontHeight($size) * $ratio;
  741    }
  ...
  743    /*function get_font_x_height($font, $size) {
  744      $this->_pdf->selectFont($font);
  745:     $ratio = $this->_dompdf->get_option("font_height_ratio");
  746      return $this->_pdf->getFontXHeight($size) * $ratio;
  747    }*/
  748    
  749    function get_font_baseline($font, $size) {
  750:     $ratio = $this->_dompdf->get_option("font_height_ratio");
  751      return $this->get_font_height($font, $size) / $ratio;
  752    }

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\css_color.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Fabien Ménager <fabien.menager@gmail.com>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\dompdf.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Fabien Ménager <fabien.menager@gmail.com>
    .
   53   *
   54   *
   55:  * @package dompdf
   56   */
   57  class DOMPDF {
   ..
  199     * Local file extension whitelist
  200     *
  201:    * File extensions supported by dompdf for local files.
  202     *
  203     * @var array
  ...
  287  
  288    /**
  289:    * Get the dompdf option value
  290     *
  291     * @param string $key
  ...
  478    /**
  479     * Loads an HTML file
  480:    * Parse errors are stored in the global array _dompdf_warnings.
  481     *
  482     * @param string $file a filename or url to load
  ...
  544    /**
  545     * Loads an HTML string
  546:    * Parse errors are stored in the global array _dompdf_warnings.
  547     * @todo use the $encoding variable
  548     *
  ...
  911          //        not the actual generated content, and forces all possible counter
  912          //        values. See notes in issue #750.
  913:         if ( $frame->get_node()->nodeName == "dompdf_generated" ) {
  914            // all possible counter values
  915            $chars = List_Bullet_Renderer::get_counter_chars('decimal');
  ...
  962        }
  963  
  964:       if ( $name === "dompdf.view" && $this->parse_default_view($value) ) {
  965          $this->_pdf->set_default_view($this->_default_view, $this->_default_view_options);
  966        }
  ...
  976      Image_Cache::clear();
  977  
  978:     global $_dompdf_warnings, $_dompdf_show_warnings;
  979:     if ( $_dompdf_show_warnings ) {
  980        echo '<b>DOMPDF Warnings</b><br><pre>';
  981:       foreach ($_dompdf_warnings as $msg) {
  982          echo $msg . "\n";
  983        }

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\dompdf_exception.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   10   * Standard exception thrown by DOMPDF classes
   11   *
   12:  * @package dompdf
   13   */
   14  class DOMPDF_Exception extends Exception {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\dompdf_image_exception.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   10   * Image exception thrown by DOMPDF
   11   *
   12:  * @package dompdf
   13   */
   14  class DOMPDF_Image_Exception extends DOMPDF_Exception {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\file.skel:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  ...

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\fixed_positioner.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Fabien Ménager <fabien.menager@gmail.com>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\font_metrics.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Helmut Tischer <htischer@weihenstephan.org>
    .
   22   * Declared here because PHP5 prevents constants from being declared with expressions
   23   */
   24: define('__DOMPDF_FONT_CACHE_FILE', DOMPDF_FONT_DIR . "dompdf_font_family_cache.php");
   25  
   26  /**
   ..
   32   *
   33   * @static
   34:  * @package dompdf
   35   */
   36  class Font_Metrics {
   ..
  239     */
  240    static function load_font_families() {
  241:     $dist_fonts = require_once DOMPDF_DIR . "/lib/fonts/dompdf_font_family_cache.dist.php";
  242      
  243      // FIXME: temporary step for font cache created before the font cache fix
  244:     if ( is_readable( DOMPDF_FONT_DIR . "dompdf_font_family_cache" ) ) {
  245:       $old_fonts = require_once DOMPDF_FONT_DIR . "dompdf_font_family_cache";
  246        // If the font family cache is still in the old format
  247        if ( $old_fonts === 1 ) {
  248:         $cache_data = file_get_contents(DOMPDF_FONT_DIR . "dompdf_font_family_cache");
  249:         file_put_contents(DOMPDF_FONT_DIR . "dompdf_font_family_cache", "<"."?php return $cache_data ?".">");
  250:         $old_fonts = require_once DOMPDF_FONT_DIR . "dompdf_font_family_cache";
  251        }
  252        $dist_fonts += $old_fonts;

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   17   *
   18   * @access protected
   19:  * @package dompdf
   20   */
   21  class Frame {
   ..
  698      }
  699  
  700:     $enable_css_float = $this->get_style()->get_stylesheet()->get_dompdf()->get_option("enable_css_float");
  701      return $this->_is_cache["in_flow"] = !($enable_css_float && $this->get_style()->float !== "none" || $this->is_absolute());
  702    }
  ...
 1019   *
 1020   * @access private
 1021:  * @package dompdf
 1022   */
 1023  class FrameList implements IteratorAggregate {
 ....
 1035   *
 1036   * @access private
 1037:  * @package dompdf
 1038   */
 1039  class FrameListIterator implements Iterator {
 ....
 1101   *
 1102   * @access private
 1103:  * @package dompdf
 1104   */
 1105  class FrameTreeList implements IteratorAggregate {
 ....
 1123   *
 1124   * @access private
 1125:  * @package dompdf
 1126   */
 1127  class FrameTreeIterator implements Iterator {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_decorator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  abstract class Frame_Decorator extends Frame {
   16:   const DEFAULT_COUNTER = "-dompdf-default-counter";
   17    
   18    public $_counters = array(); // array([id] => counter_value) (for generated content)
   ..
   47    
   48    /**
   49:    * Reference to the current dompdf instance
   50     *
   51     * @var DOMPDF
   52     */
   53:   protected $_dompdf;
   54    
   55    /**
   ..
   71     *
   72     * @param Frame  $frame  The decoration target
   73:    * @param DOMPDF $dompdf The DOMPDF object
   74     */
   75:   function __construct(Frame $frame, DOMPDF $dompdf) {
   76      $this->_frame = $frame;
   77      $this->_root = null;
   78:     $this->_dompdf = $dompdf;
   79      $frame->set_decorator($this);
   80    }
   ..
  117      $frame->set_style(clone $this->_frame->get_original_style());
  118      
  119:     return Frame_Factory::decorate_frame($frame, $this->_dompdf, $this->_root);
  120    }
  121  
  ...
  129      $frame->set_style(clone $this->_frame->get_original_style());
  130      
  131:     $deco = Frame_Factory::decorate_frame($frame, $this->_dompdf, $this->_root);
  132      
  133      foreach ($this->get_children() as $child) {
  ...
  206     * @return DOMPDF
  207     */
  208:   function get_dompdf() {
  209:     return $this->_dompdf;
  210    }
  211  
  ...
  551        // this can push the current node to the next page before counter rules have bubbled up (but only if
  552        // it's been rendered, thus the position check)
  553:       if ( !$this->is_text_node() && $this->get_node()->hasAttribute("dompdf_before_frame_id") ) {
  554          foreach($this->_frame->get_children() as $child) {
  555:           if ( $this->get_node()->getAttribute("dompdf_before_frame_id") == $child->get_id() && $child->get_position('x') !== NULL ) {
  556              $style = $child->get_style();
  557              if ( $style->counter_increment && ($decrement = $style->counter_increment) !== "none" ) {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_factory.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   16   *
   17   * @access private
   18:  * @package dompdf
   19   */
   20  class Frame_Factory {
   ..
   24     * 
   25     * @param $root Frame The frame to decorate
   26:    * @param $dompdf DOMPDF The dompdf instance
   27     * @return Page_Frame_Decorator
   28     */
   29:   static function decorate_root(Frame $root, DOMPDF $dompdf) {
   30:     $frame = new Page_Frame_Decorator($root, $dompdf);
   31      $frame->set_reflower( new Page_Frame_Reflower($frame) );
   32      $root->set_decorator($frame);
   ..
   38     *
   39     * @param Frame  $frame  The frame to decorate
   40:    * @param DOMPDF $dompdf The dompdf instance
   41     * @param Frame  $root   The frame to decorate
   42     *
   ..
   45     * FIXME: this is admittedly a little smelly...
   46     */
   47:   static function decorate_frame(Frame $frame, DOMPDF $dompdf, Frame $root = null) {
   48:     if ( is_null($dompdf) ) {
   49        throw new DOMPDF_Exception("The DOMPDF argument is required");
   50      }
   ..
   81        } 
   82        else {
   83:         $enable_css_float = $dompdf->get_option("enable_css_float");
   84          if ( $enable_css_float && $style->float !== "none" ) {
   85            $decorator = "Block";
   ..
  131        break;
  132  
  133:     case "-dompdf-list-bullet":
  134        if ( $style->list_style_position === "inside" ) {
  135          $positioner = "Inline";
  ...
  149        break;
  150  
  151:     case "-dompdf-image":
  152        $positioner = "Inline";
  153        $decorator = "Image";
  ...
  155        break;
  156        
  157:     case "-dompdf-br":
  158        $positioner = "Inline";
  159        $decorator = "Inline";
  ...
  164        // FIXME: should throw some sort of warning or something?
  165      case "none":
  166:       if ( $style->_dompdf_keep !== "yes" ) {
  167          // Remove the node and the frame
  168          $frame->get_parent()->remove_child($frame);
  ...
  190      // Handle nodeName
  191      if ( $node->nodeName === "img" ) {
  192:       $style->display = "-dompdf-image";
  193        $decorator = "Image";
  194        $reflower = "Image";
  ...
  199      $reflower .= "_Frame_Reflower";
  200  
  201:     $deco = new $decorator($frame, $dompdf);
  202      
  203      $deco->set_positioner( new $positioner($deco) );
  ...
  210      if ( $display === "list-item" ) {
  211        // Insert a list-bullet frame
  212:       $xml = $dompdf->get_dom();
  213        $bullet_node = $xml->createElement("bullet"); // arbitrary choice
  214        $b_f = new Frame($bullet_node);
  ...
  218        
  219        if ( $parent_node ) {
  220:         if ( !$parent_node->hasAttribute("dompdf-children-count") ) {
  221            $xpath = new DOMXPath($xml);
  222            $count = $xpath->query("li", $parent_node)->length;
  223:           $parent_node->setAttribute("dompdf-children-count", $count);
  224          }
  225          
  ...
  228          }
  229          else {
  230:           if ( !$parent_node->hasAttribute("dompdf-counter") ) {
  231              $index = ($parent_node->hasAttribute("start") ? $parent_node->getAttribute("start") : 1);
  232            }
  233            else {
  234:             $index = $parent_node->getAttribute("dompdf-counter")+1;
  235            }
  236          }
  237          
  238:         $parent_node->setAttribute("dompdf-counter", $index);
  239:         $bullet_node->setAttribute("dompdf-counter", $index);
  240        }
  241        
  242:       $new_style = $dompdf->get_css()->create_style();
  243:       $new_style->display = "-dompdf-list-bullet";
  244        $new_style->inherit($style);
  245        $b_f->set_style($new_style);
  246        
  247:       $deco->prepend_child( Frame_Factory::decorate_frame($b_f, $dompdf, $root) );
  248      }
  249      

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_reflower.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   14   *
   15   * @access private
   16:  * @package dompdf
   17   */
   18  abstract class Frame_Reflower {
   ..
   44     * @return DOMPDF
   45     */
   46:   function get_dompdf() {
   47:     return $this->_frame->get_dompdf();
   48    }
   49  
   ..
  435      }
  436    
  437:     if ( $style->content && !$frame->get_first_child() && $frame->get_node()->nodeName === "dompdf_generated" ) {
  438        $content = $this->_parse_content();
  439        // add generated content to the font subset
  440        // FIXME: This is currently too late because the font subset has already been generated.
  441        //        See notes in issue #750.
  442:       if ( $frame->get_dompdf()->get_option("enable_font_subsetting") && $frame->get_dompdf()->get_canvas() instanceof CPDF_Adapter ) {
  443:         $frame->get_dompdf()->get_canvas()->register_string_subset($style->font_family, $content);
  444        }
  445        
  ...
  452        $new_frame->set_style($new_style);
  453        
  454:       Frame_Factory::decorate_frame($new_frame, $frame->get_dompdf(), $frame->get_root());
  455        $frame->append_child($new_frame);
  456      }

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\frame_tree.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   15   * styling and layout.
   16   *
   17:  * @package dompdf
   18   * @access protected
   19   */

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\functions.inc.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Helmut Tischer <htischer@weihenstephan.org>
    .
  756   * @return array The same format as getimagesize($filename)
  757   */
  758: function dompdf_getimagesize($filename, $context = null) {
  759    static $cache = array();
  760    
  ...
  864    }
  865  
  866:   global $_dompdf_warnings;
  867:   global $_dompdf_show_warnings;
  868  
  869:   if ( $_dompdf_show_warnings ) {
  870      echo $errstr . "\n";
  871    }
  872  
  873:   $_dompdf_warnings[] = $errstr;
  874  }
  875  
  ...
  913   * @param string $msg  The message to show
  914   */
  915: function dompdf_debug($type, $msg) {
  916:   global $_DOMPDF_DEBUG_TYPES, $_dompdf_show_warnings, $_dompdf_debug;
  917:   if ( isset($_DOMPDF_DEBUG_TYPES[$type]) && ($_dompdf_show_warnings || $_dompdf_debug) ) {
  918      $arr = debug_backtrace();
  919  

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\gd_adapter.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Fabien Ménager <fabien.menager@gmail.com>
    .
   14   * Not super-useful day-to-day but handy nonetheless
   15   *
   16:  * @package dompdf
   17   */
   18  class GD_Adapter implements Canvas {
   ..
   20     * @var DOMPDF
   21     */
   22:   private $_dompdf;
   23  
   24    /**
   ..
   83     * @param mixed  $size         The size of image to create: array(x1,y1,x2,y2) or "letter", "legal", etc.
   84     * @param string $orientation  The orientation of the document (either 'landscape' or 'portrait')
   85:    * @param DOMPDF $dompdf
   86     * @param float  $aa_factor    Anti-aliasing factor, 1 for no AA
   87     * @param array  $bg_color     Image background color: array(r,g,b,a), 0 <= r,g,b,a <= 1
   88     */
   89:   function __construct($size, $orientation = "portrait", DOMPDF $dompdf, $aa_factor = 1.0, $bg_color = array(1,1,1,0) ) {
   90  
   91      if ( !is_array($size) ) {
   ..
  104      }
  105  
  106:     $this->_dompdf = $dompdf;
  107  
  108      if ( $aa_factor < 1 ) {
  ...
  132    }
  133  
  134:   function get_dompdf(){
  135:     return $this->_dompdf;
  136    }
  137  
  ...
  554     */
  555    function image($img_url, $x, $y, $w, $h, $resolution = "normal") {
  556:     $img_type = Image_Cache::detect_type($img_url, $this->_dompdf->get_http_context());
  557      $img_ext  = Image_Cache::type_to_ext($img_type);
  558  
  ...
  565  
  566      if ( !$src ) {
  567:       return; // Probably should add to $_dompdf_errors or whatever here
  568      }
  569      
  ...
  700    function get_font_height($font, $size) {
  701      $font = $this->get_ttf_file($font);
  702:     $ratio = $this->_dompdf->get_option("font_height_ratio");
  703  
  704      // FIXME: word spacing
  ...
  708    
  709    function get_font_baseline($font, $size) {
  710:     $ratio = $this->_dompdf->get_option("font_height_ratio");
  711      return $this->get_font_height($font, $size) / $ratio;
  712    }

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\image_cache.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Helmut Tischer <htischer@weihenstephan.org>
    .
   14   *
   15   * @access private
   16:  * @package dompdf
   17   */
   18  class Image_Cache {
   ..
   40     * @param string $host       Default host if none specified in $url
   41     * @param string $base_path  Default path if none specified in $url
   42:    * @param DOMPDF $dompdf     The DOMPDF instance
   43     *
   44     * @throws DOMPDF_Image_Exception
   45     * @return array             An array with two elements: The local path to the image and the image extension
   46     */
   47:   static function resolve_url($url, $protocol, $host, $base_path, DOMPDF $dompdf) {
   48      $protocol = mb_strtolower($protocol);
   49      $parsed_url = explode_url($url);
   ..
   54      $data_uri = strpos($parsed_url['protocol'], "data:") === 0;
   55      $full_url = null;
   56:     $enable_remote = $dompdf->get_option("enable_remote");
   57  
   58      try {
   ..
   75          // From remote
   76          else {
   77:           $tmp_dir = $dompdf->get_option("temp_dir");
   78:           $resolved_url = tempnam($tmp_dir, "ca_dompdf_img_");
   79            $image = "";
   80  
   ..
   86            else {
   87              set_error_handler("record_warnings");
   88:             $image = file_get_contents($full_url, null, $dompdf->get_http_context());
   89              restore_error_handler();
   90            }
   ..
  120        // Check is the file is an image
  121        else {
  122:         list($width, $height, $type) = dompdf_getimagesize($resolved_url, $dompdf->get_http_context());
  123          
  124          // Known image type
  ...
  141        $type = IMAGETYPE_PNG;
  142        $message = "Image not found or type unknown";
  143:       $_dompdf_warnings[] = $e->getMessage()." :: $url";
  144      }
  145  
  ...
  163    
  164    static function detect_type($file, $context = null) {
  165:     list(, , $type) = dompdf_getimagesize($file, $context);
  166      return $type;
  167    }

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\image_frame_decorator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Fabien Ménager <fabien.menager@gmail.com>
    .
   12   *
   13   * @access private
   14:  * @package dompdf
   15   */
   16  class Image_Frame_Decorator extends Frame_Decorator {
   ..
   35     *
   36     * @param Frame $frame the frame to decorate
   37:    * @param DOMPDF $dompdf the document's dompdf object (required to resolve relative & remote urls)
   38     */
   39:   function __construct(Frame $frame, DOMPDF $dompdf) {
   40:     parent::__construct($frame, $dompdf);
   41      $url = $frame->get_node()->getAttribute("src");
   42  
   43:     $debug_png = $dompdf->get_option("debug_png");
   44      if ($debug_png) print '[__construct '.$url.']';
   45  
   46      list($this->_image_url, /*$type*/, $this->_image_msg) = Image_Cache::resolve_url(
   47        $url,
   48:       $dompdf->get_protocol(),
   49:       $dompdf->get_host(),
   50:       $dompdf->get_base_path(),
   51:       $dompdf
   52      );
   53  

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\image_frame_reflower.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Fabien Ménager <fabien.menager@gmail.com>
    .
   12   *
   13   * @access private
   14:  * @package dompdf
   15   */
   16  class Image_Frame_Reflower extends Frame_Reflower {
   ..
   27      //$page = $frame->get_root();
   28  
   29:     //$enable_css_float = $this->get_dompdf()->get_option("enable_css_float");
   30      //if ($enable_css_float && $frame->get_style()->float !== "none" ) {
   31      //  $page->add_floating_frame($this);
   ..
   42      if (DEBUGPNG) {
   43        // Determine the image's size. Time consuming. Only when really needed?
   44:       list($img_width, $img_height) = dompdf_getimagesize($this->_frame->get_image_url(), $this->get_dompdf()->get_http_context());
   45        print "get_min_max_width() ".
   46          $this->_frame->get_style()->width.' '.
   ..
  105      if ($width == 0 || $height == 0) {
  106        // Determine the image's size. Time consuming. Only when really needed!
  107:       list($img_width, $img_height) = dompdf_getimagesize($this->_frame->get_image_url(), $this->get_dompdf()->get_http_context());
  108        
  109        // don't treat 0 as error. Can be downscaled or can be catched elsewhere if image not readable.
  ...
  111        // See also List_Bullet_Image_Frame_Decorator::__construct
  112        if ($width == 0 && $height == 0) {
  113:         $dpi = $this->_frame->get_dompdf()->get_option("dpi");
  114          $width = (float)($img_width * 72) / $dpi;
  115          $height = (float)($img_height * 72) / $dpi;

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\image_renderer.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Fabien Ménager <fabien.menager@gmail.com>
    .
   12   *
   13   * @access private
   14:  * @package dompdf
   15   */
   16  class Image_Renderer extends Block_Renderer {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\inline_frame_decorator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Helmut Tischer <htischer@weihenstephan.org>
    .
   12   *
   13   * @access private
   14:  * @package dompdf
   15   */
   16  class Inline_Frame_Decorator extends Frame_Decorator {
   17    
   18:   function __construct(Frame $frame, DOMPDF $dompdf) { parent::__construct($frame, $dompdf); }
   19  
   20    function split(Frame $frame = null, $force_pagebreak = false) {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\inline_frame_reflower.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Inline_Frame_Reflower extends Frame_Reflower {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\inline_positioner.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Inline_Positioner extends Positioner {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\inline_renderer.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Inline_Renderer extends Abstract_Renderer {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\javascript_embedder.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Fabien Ménager <fabien.menager@gmail.com>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Javascript_Embedder {
   ..
   18     * @var DOMPDF
   19     */
   20:   protected $_dompdf;
   21  
   22:   function __construct(DOMPDF $dompdf) {
   23:     $this->_dompdf = $dompdf;
   24    }
   25  
   26    function insert($script) {
   27:     $this->_dompdf->get_canvas()->javascript($script);
   28    }
   29  
   30    function render(Frame $frame) {
   31:     if ( !$this->_dompdf->get_option("enable_javascript") ) {
   32        return;
   33      }

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\line_box.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Fabien Ménager <fabien.menager@gmail.com>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   14   *
   15   * @access protected
   16:  * @package dompdf
   17   */
   18  class Line_Box {
   ..
  134    
  135    function get_float_offsets() {
  136:     $enable_css_float = $this->_block_frame->get_dompdf()->get_option("enable_css_float");
  137      if ( !$enable_css_float ) {
  138        return;

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\list_bullet_frame_decorator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Helmut Tischer <htischer@weihenstephan.org>
    .
   12   *
   13   * @access private
   14:  * @package dompdf 
   15   */
   16  class List_Bullet_Frame_Decorator extends Frame_Decorator {
   ..
   26    //........................................................................
   27  
   28:   function __construct(Frame $frame, DOMPDF $dompdf) {
   29:     parent::__construct($frame, $dompdf);
   30    }
   31    

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\list_bullet_frame_reflower.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class List_Bullet_Frame_Reflower extends Frame_Reflower {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\list_bullet_image_frame_decorator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Helmut Tischer <htischer@weihenstephan.org>
    .
   12   *
   13   * @access private
   14:  * @package dompdf
   15   */
   16  class List_Bullet_Image_Frame_Decorator extends Frame_Decorator {
   ..
   41     *
   42     * @param Frame $frame the bullet frame to decorate
   43:    * @param DOMPDF $dompdf the document's dompdf object
   44     */
   45:   function __construct(Frame $frame, DOMPDF $dompdf) {
   46      $style = $frame->get_style();
   47      $url = $style->list_style_image;
   48      $frame->get_node()->setAttribute("src", $url);
   49:     $this->_img = new Image_Frame_Decorator($frame, $dompdf);
   50:     parent::__construct($this->_img, $dompdf);
   51:     list($width, $height) = dompdf_getimagesize($this->_img->get_image_url(), $dompdf->get_http_context());
   52  
   53      // Resample the bullet image to be consistent with 'auto' sized images
   54      // See also Image_Frame_Reflower::get_min_max_width
   55      // Tested php ver: value measured in px, suffix "px" not in value: rtrim unnecessary.
   56:     $dpi = $this->_dompdf->get_option("dpi");
   57      $this->_width = ((float)rtrim($width, "px") * 72) / $dpi;
   58      $this->_height = ((float)rtrim($height, "px") * 72) / $dpi;
   ..
   63      //Code below has no effect.
   64      //See block_frame_reflower _calculate_restricted_height
   65:     //See generated_frame_reflower, Dompdf:render() "list-item", "-dompdf-list-bullet"S.
   66      //Leave for now    
   67      //if ($style->min_height < $this->_height ) {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\list_bullet_positioner.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Helmut Tischer <htischer@weihenstephan.org>
    .
   12   *
   13   * @access private
   14:  * @package dompdf
   15   */
   16  class List_Bullet_Positioner extends Positioner {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\list_bullet_renderer.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Helmut Tischer <htischer@weihenstephan.org>
    .
   12   *
   13   * @access private
   14:  * @package dompdf
   15   */
   16  class List_Bullet_Renderer extends Abstract_Renderer {
   ..
  142        //$w = $frame->get_width();
  143        //$h = $frame->get_height();
  144:       list($width, $height) = dompdf_getimagesize($img, $this->_dompdf->get_http_context());
  145:       $dpi = $this->_dompdf->get_option("dpi");
  146        $w = ((float)rtrim($width, "px") * 72) / $dpi;
  147        $h = ((float)rtrim($height, "px") * 72) / $dpi;
  ...
  197          $pad = null;
  198          if ( $bullet_style === "decimal-leading-zero" ) {
  199:           $pad = strlen($li->get_parent()->get_node()->getAttribute("dompdf-children-count"));
  200          }
  201  
  202          $node = $frame->get_node();
  203  
  204:         if ( !$node->hasAttribute("dompdf-counter") ) {
  205            return;
  206          }
  207  
  208:         $index = $node->getAttribute("dompdf-counter");
  209          $text = $this->make_counter($index, $bullet_style, $pad);
  210  

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\null_frame_decorator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Null_Frame_Decorator extends Frame_Decorator {
   16  
   17:   function __construct(Frame $frame, DOMPDF $dompdf) {
   18:     parent::__construct($frame, $dompdf);
   19      $style = $this->_frame->get_style();
   20      $style->width = 0;

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\null_frame_reflower.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Null_Frame_Reflower extends Frame_Reflower {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\null_positioner.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Null_Positioner extends Positioner {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\page_cache.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   13   * 
   14   * @access private
   15:  * @package dompdf
   16   * @static
   17   */
   18  class Page_Cache {
   19  
   20:   const DB_USER = "dompdf_page_cache";
   21    const DB_PASS = "some meaningful password";
   22:   const DB_NAME = "dompdf_page_cache";
   23    
   24    static private $__connection = null;

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\page_frame_decorator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Page_Frame_Decorator extends Frame_Decorator {
   ..
   56     *
   57     * @param Frame  $frame the frame to decorate
   58:    * @param DOMPDF $dompdf
   59     */
   60:   function __construct(Frame $frame, DOMPDF $dompdf) {
   61:     parent::__construct($frame, $dompdf);
   62      $this->_page_full = false;
   63      $this->_in_table = 0;
   ..
  254    protected function _page_break_allowed(Frame $frame) {
  255  
  256:     $block_types = array("block", "list-item", "table", "-dompdf-image");
  257:     dompdf_debug("page-break", "_page_break_allowed(" . $frame->get_node()->nodeName. ")");
  258      $display = $frame->get_style()->display;
  259  
  ...
  263        // Avoid breaks within table-cells
  264        if ( $this->_in_table ) {
  265:         dompdf_debug("page-break", "In table: " . $this->_in_table);
  266          return false;
  267        }
  ...
  270  
  271        if ( $frame->get_style()->page_break_before === "avoid" ) {
  272:         dompdf_debug("page-break", "before: avoid");
  273          return false;
  274        }
  ...
  281        // Does the previous element allow a page break after?
  282        if ( $prev && $prev->get_style()->page_break_after === "avoid" ) {
  283:         dompdf_debug("page-break", "after: avoid");
  284          return false;
  285        }
  ...
  289        $parent = $frame->get_parent();
  290        if ( $prev && $parent && $parent->get_style()->page_break_inside === "avoid" ) {
  291:           dompdf_debug("page-break", "parent inside: avoid");
  292          return false;
  293        }
  ...
  298        if ( $parent->get_node()->nodeName === "body" && !$prev ) {
  299          // We are the body's first child
  300:           dompdf_debug("page-break", "Body's first child.");
  301          return false;
  302        }
  ...
  307          return $this->_page_break_allowed( $parent );
  308  
  309:       dompdf_debug("page-break", "block: break allowed");
  310        return true;
  311  
  ...
  317        // Avoid breaks within table-cells
  318        if ( $this->_in_table ) {
  319:           dompdf_debug("page-break", "In table: " . $this->_in_table);
  320          return false;
  321        }
  ...
  324        $block_parent = $frame->find_block_parent();
  325        if ( count($block_parent->get_line_boxes() ) < $frame->get_style()->orphans ) {
  326:           dompdf_debug("page-break", "orphans");
  327          return false;
  328        }
  ...
  335        while ($p) {
  336          if ( $p->get_style()->page_break_inside === "avoid" ) {
  337:           dompdf_debug("page-break", "parent->inside: avoid");
  338            return false;
  339          }
  ...
  350        if ( $block_parent->get_node()->nodeName === "body" && !$prev ) {
  351          // We are the body's first child
  352:           dompdf_debug("page-break", "Body's first child.");
  353          return false;
  354        }
  ...
  359          return false;
  360  
  361:       dompdf_debug("page-break", "inline: break allowed");
  362        return true;
  363  
  ...
  371        while ($p) {
  372          if ( $p->get_style()->page_break_inside === "avoid" ) {
  373:           dompdf_debug("page-break", "parent->inside: avoid");
  374            return false;
  375          }
  ...
  379        // Avoid breaking after the first row of a table
  380        if ( $p && $p->get_first_child() === $frame) {
  381:          dompdf_debug("page-break", "table: first-row");
  382          return false;
  383        }
  ...
  385        // If this is a nested table, prevent the page from breaking
  386        if ( $this->_in_table > 1 ) {
  387:         dompdf_debug("page-break", "table: nested table");
  388          return false;
  389        }
  390  
  391:       dompdf_debug("page-break","table-row/row-groups: break allowed");
  392        return true;
  393  
  ...
  399      } else {
  400  
  401:       dompdf_debug("page-break", "? " . $frame->get_style()->display . "");
  402        return false;
  403      }
  ...
  456        return false;
  457  
  458:     dompdf_debug("page-break", "check_page_break");
  459:     dompdf_debug("page-break", "in_table: " . $this->_in_table);
  460  
  461      // yes: determine page break location
  ...
  465      $in_table = $this->_in_table;
  466  
  467:     dompdf_debug("page-break","Starting search");
  468      while ( $iter ) {
  469        // echo "\nbacktrack: " .$iter->get_node()->nodeName ." ".spl_object_hash($iter->get_node()). "";
  470        if ( $iter === $this ) {
  471:          dompdf_debug("page-break", "reached root.");
  472          // We've reached the root in our search.  Just split at $frame.
  473          break;
  ...
  475  
  476        if ( $this->_page_break_allowed($iter) ) {
  477:         dompdf_debug("page-break","break allowed, splitting.");
  478          $iter->split(null, true);
  479          $this->_page_full = true;
  ...
  484  
  485        if ( !$flg && $next = $iter->get_last_child() ) {
  486:          dompdf_debug("page-break", "following last child.");
  487  
  488          if ( $next->is_table() )
  ...
  494  
  495        if ( $next = $iter->get_prev_sibling() ) {
  496:          dompdf_debug("page-break", "following prev sibling.");
  497  
  498          if ( $next->is_table() && !$iter->is_table() )
  ...
  508  
  509        if ( $next = $iter->get_parent() ) {
  510:          dompdf_debug("page-break", "following parent.");
  511  
  512          if ( $iter->is_table() )
  ...
  524  
  525      // No valid page break found.  Just break at $frame.
  526:     dompdf_debug("page-break", "no valid break found, just splitting.");
  527      
  528      // If we are in a table, backtrack to the nearest top-level table row

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\page_frame_reflower.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Fabien Ménager <fabien.menager@gmail.com>
    .
   12   *
   13   * @access private
   14:  * @package dompdf
   15   */
   16  class Page_Frame_Reflower extends Frame_Reflower {
   ..
  164    protected function _check_callbacks($event, $frame) {
  165      if (!isset($this->_callbacks)) {
  166:       $dompdf = $this->_frame->get_dompdf();
  167:       $this->_callbacks = $dompdf->get_callbacks();
  168:       $this->_canvas = $dompdf->get_canvas();
  169      }
  170      

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\pdflib_adapter.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Helmut Tischer <htischer@weihenstephan.org>
    .
   21   * on the underlying PDFlib functions.
   22   *
   23:  * @package dompdf
   24   */
   25  class PDFLib_Adapter implements Canvas {
   ..
   42     * @var DOMPDF
   43     */
   44:   private $_dompdf;
   45  
   46    /**
   ..
  141     *                            an array(xmin,ymin,xmax,ymax)
  142     * @param string $orientation The orientation of the document (either 'landscape' or 'portrait')
  143:    * @param DOMPDF $dompdf
  144     */
  145:   function __construct($paper = "letter", $orientation = "portrait", DOMPDF $dompdf) {
  146      if ( is_array($paper) ) {
  147        $size = $paper;
  ...
  161      $this->_height= $size[3] - $size[1];
  162  
  163:     $this->_dompdf = $dompdf;
  164  
  165      $this->_pdf = new PDFLib();
  ...
  182        $this->_pdf->begin_document("","");
  183      else {
  184:       $tmp_dir = $this->_dompdf->get_options("temp_dir");
  185:       $tmp_name = tempnam($tmp_dir, "libdompdf_pdf_");
  186        @unlink($tmp_name);
  187        $this->_file = "$tmp_name.pdf";
  ...
  237    }
  238  
  239:   function get_dompdf(){
  240:     return $this->_dompdf;
  241    }
  242  
  ...
  771      $h = (int)$h;
  772  
  773:     $img_type = Image_Cache::detect_type($img_url, $this->_dompdf->get_http_context());
  774      $img_ext  = Image_Cache::type_to_ext($img_type);
  775  
  ...
  883  
  884      // $desc is usually < 0,
  885:     $ratio = $this->_dompdf->get_option("font_height_ratio");
  886      return $size * ($asc - $desc) * $ratio;
  887    }
  888    
  889    function get_font_baseline($font, $size) {
  890:     $ratio = $this->_dompdf->get_option("font_height_ratio");
  891      return $this->get_font_height($font, $size) / $ratio * 1.1;
  892    }

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\php_evaluator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class PHP_Evaluator {
   ..
   25  
   26    function evaluate($code, $vars = array()) {
   27:     if ( !$this->_canvas->get_dompdf()->get_option("enable_php") ) {
   28        return;
   29      }

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\positioner.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   13   *
   14   * @access private
   15:  * @package dompdf
   16   */
   17  abstract class Positioner {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\renderer.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   14   *
   15   * @access private
   16:  * @package dompdf
   17   */
   18  class Renderer extends Abstract_Renderer {
   ..
   52     */
   53    function render(Frame $frame) {
   54:     global $_dompdf_debug;
   55  
   56:     if ( $_dompdf_debug ) {
   57        echo $frame;
   58        flush();
   ..
  114        break;
  115  
  116:     case "-dompdf-list-bullet":
  117        $this->_render_frame("list-bullet", $frame);
  118        break;
  119  
  120:     case "-dompdf-image":
  121        $this->_render_frame("image", $frame);
  122        break;
  ...
  214    protected function _check_callbacks($event, $frame) {
  215      if (!isset($this->_callbacks)) {
  216:       $this->_callbacks = $this->_dompdf->get_callbacks();
  217      }
  218      
  ...
  247        switch ($type) {
  248        case "block":
  249:         $this->_renderers[$type] = new Block_Renderer($this->_dompdf);
  250          break;
  251  
  252        case "inline":
  253:         $this->_renderers[$type] = new Inline_Renderer($this->_dompdf);
  254          break;
  255  
  256        case "text":
  257:         $this->_renderers[$type] = new Text_Renderer($this->_dompdf);
  258          break;
  259  
  260        case "image":
  261:         $this->_renderers[$type] = new Image_Renderer($this->_dompdf);
  262          break;
  263        
  264        case "table-cell":
  265:         $this->_renderers[$type] = new Table_Cell_Renderer($this->_dompdf);
  266          break;
  267        
  268        case "table-row-group":
  269:         $this->_renderers[$type] = new Table_Row_Group_Renderer($this->_dompdf);
  270          break;
  271  
  272        case "list-bullet":
  273:         $this->_renderers[$type] = new List_Bullet_Renderer($this->_dompdf);
  274          break;
  275  
  ...
  279  
  280        case "javascript":
  281:         $this->_renderers[$type] = new Javascript_Embedder($this->_dompdf);
  282          break;
  283          

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\style.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Helmut Tischer <htischer@weihenstephan.org>
    .
   18   * Actual CSS parsing is performed in the {@link Stylesheet} class.
   19   *
   20:  * @package dompdf
   21   */
   22  class Style {
   ..
  205        $d["background_image"] = "none";
  206        $d["background_image_resolution"] = "normal";
  207:       $d["_dompdf_background_image_resolution"] = $d["background_image_resolution"];
  208        $d["background_position"] = "0% 0%";
  209        $d["background_repeat"] = "repeat";
  ...
  253        $d["empty_cells"] = "show";
  254        $d["float"] = "none";
  255:       $d["font_family"] = $stylesheet->get_dompdf()->get_option("default_font");
  256        $d["font_size"] = "medium";
  257        $d["font_style"] = "normal";
  ...
  261        $d["height"] = "auto";
  262        $d["image_resolution"] = "normal";
  263:       $d["_dompdf_image_resolution"] = $d["image_resolution"];
  264:       $d["_dompdf_keep"] = "";
  265        $d["left"] = "auto";
  266        $d["letter_spacing"] = "normal";
  ...
  488  
  489        if ( ($i = mb_strpos($l, "px"))  !== false ) {
  490:         $dpi = $this->_stylesheet->get_dompdf()->get_option("dpi");
  491          $ret += ( mb_substr($l, 0, $i)  * 72 ) / $dpi;
  492          continue;
  ...
  504  
  505        if ( ($i = mb_strpos($l, "rem"))  !== false ) {
  506:         $ret += (float)mb_substr($l, 0, $i) * $this->_stylesheet->get_dompdf()->get_tree()->get_root()->get_style()->font_size;
  507          continue;
  508        }
  ...
  685      
  686      if ( !isset(self::$_defaults[$prop]) ) {
  687:       global $_dompdf_warnings;
  688:       $_dompdf_warnings[] = "'$prop' is not a valid CSS2 property.";
  689        return;
  690      }
  ...
 2119        //and url exists, then url has precedence, otherwise fall back to list_style_type
 2120        //Firefox is wrong here (list_style_image gets overwritten on explicite list_style_type)
 2121:       //Internet Explorer 7/8 and dompdf is right.
 2122         
 2123        if ( mb_substr($value, 0, 3) === "url" ) {
 ....
 2372    }
 2373    
 2374:   function set__dompdf_background_image_resolution($val) {
 2375      $this->set_background_image_resolution($val);
 2376    }
 2377    
 2378:   function set__dompdf_image_resolution($val) {
 2379      $this->set_image_resolution($val);
 2380    }

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\stylesheet.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Helmut Tischer <htischer@weihenstephan.org>
    .
   24   *
   25   * @see Style
   26:  * @package dompdf
   27   */
   28  class Stylesheet {
   ..
   61  
   62    /**
   63:    * Current dompdf instance
   64     *
   65     * @var DOMPDF
   66     */
   67:   private $_dompdf;
   68    
   69    /**
   ..
  125     *   screen, tty, tv, projection, handheld, print, braille, aural, all
  126     * The following are non standard extensions for undocumented specific environments.
  127:    *   static, visual, bitmap, paged, dompdf
  128     * Note, even though the generated pdf file is intended for print output,
  129     * the desired content might be different (e.g. screen or projection view of html file).
  130:    * Therefore allow specification of content by dompdf setting DOMPDF_DEFAULT_MEDIA_TYPE.
  131     * If given, replace media "print" by DOMPDF_DEFAULT_MEDIA_TYPE.
  132     * (Previous version $ACCEPTED_MEDIA_TYPES = $ACCEPTED_GENERIC_MEDIA_TYPES + $ACCEPTED_DEFAULT_MEDIA_TYPE)
  133     */
  134    static $ACCEPTED_DEFAULT_MEDIA_TYPE = "print";
  135:   static $ACCEPTED_GENERIC_MEDIA_TYPES = array("all", "static", "visual", "bitmap", "paged", "dompdf");
  136  
  137    /**
  ...
  141     * the current script.
  142     */
  143:   function __construct(DOMPDF $dompdf) {
  144:     $this->_dompdf = $dompdf;
  145      $this->_styles = array();
  146      $this->_loaded_files = array();
  ...
  182     * @return DOMPDF
  183     */
  184:   function get_dompdf() { return $this->_dompdf; }
  185  
  186    /**
  ...
  308    
  309        set_error_handler("record_warnings");
  310:       $css = file_get_contents($file, null, $this->_dompdf->get_http_context());
  311        restore_error_handler();
  312      
  ...
  314        
  315        // See http://the-stickman.com/web-development/php/getting-http-response-headers-when-using-file_get_contents/
  316:       if ( isset($http_response_header) && !$this->_dompdf->get_quirksmode() ) {
  317          foreach($http_response_header as $_header) {
  318            if ( preg_match("@Content-Type:\s*([\w/]+)@i", $_header, $matches) && 
  ...
  827          foreach ($query["pseudo_elements"] as $pos) {
  828            // Do not add a new pseudo element if another one already matched
  829:           if ( $node->hasAttribute("dompdf_{$pos}_frame_id") ) {
  830              continue;
  831            }
  ...
  836            }
  837            else {
  838:             $new_node = $node->ownerDocument->createElement("dompdf_generated");
  839            }
  840            
  841            $new_node->setAttribute($pos, $pos);
  842            $new_frame_id = $tree->insert_node($node, $new_node, $pos);
  843:           $node->setAttribute("dompdf_{$pos}_frame_id", $new_frame_id);
  844          }
  845        }
  ...
 1055          case "media":
 1056            $acceptedmedia = self::$ACCEPTED_GENERIC_MEDIA_TYPES;
 1057:           $acceptedmedia[] = $this->_dompdf->get_option("default_media_type");
 1058            
 1059            $media = preg_split("/\s*,\s*/", mb_strtolower(trim($match[3])));
 ....
 1188      if ( count($arr) > 0 ) {
 1189        $acceptedmedia = self::$ACCEPTED_GENERIC_MEDIA_TYPES;
 1190:       $acceptedmedia[] = $this->_dompdf->get_option("default_media_type");
 1191                
 1192        // @import url media_type [media_type...]
 ....
 1269      );
 1270      
 1271:     Font_Metrics::register_font($style, $valid_sources[0]["path"], $this->_dompdf->get_http_context());
 1272    }
 1273  

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_cell_frame_decorator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Table_Cell_Frame_Decorator extends Block_Frame_Decorator {
   ..
   20    //........................................................................
   21  
   22:   function __construct(Frame $frame, DOMPDF $dompdf) {
   23:     parent::__construct($frame, $dompdf);
   24      $this->_resolved_borders = array();
   25      $this->_content_height = 0;    

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_cell_frame_reflower.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Table_Cell_Frame_Reflower extends Block_Frame_Reflower {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_cell_positioner.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Table_Cell_Positioner extends Positioner {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_cell_renderer.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Table_Cell_Renderer extends Block_Renderer {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_frame_decorator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Table_Frame_Decorator extends Frame_Decorator {
   ..
   69     *
   70     * @param Frame  $frame the frame to decorate
   71:    * @param DOMPDF $dompdf
   72     */
   73:   function __construct(Frame $frame, DOMPDF $dompdf) {
   74:     parent::__construct($frame, $dompdf);
   75      $this->_cellmap = new Cellmap($this);
   76      
   ..
  278            // if it's omitted, php (as of 2004-07-28) segfaults.
  279            $frame->set_style(clone $style);
  280:           $table_row = Frame_Factory::decorate_frame($frame, $this->_dompdf, $this->_root);
  281  
  282            // Add the cell to the row

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_frame_reflower.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Table_Frame_Reflower extends Frame_Reflower {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_row_frame_decorator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Table_Row_Frame_Decorator extends Frame_Decorator {
   ..
   17    // protected members
   18    
   19:   function __construct(Frame $frame, DOMPDF $dompdf) {
   20:     parent::__construct($frame, $dompdf);
   21    }
   22    

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_row_frame_reflower.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Table_Row_Frame_Reflower extends Frame_Reflower {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_row_group_frame_decorator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   13   *
   14   * @access private
   15:  * @package dompdf
   16   */
   17  class Table_Row_Group_Frame_Decorator extends Frame_Decorator {
   ..
   21     *
   22     * @param Frame $frame   Frame to decorate
   23:    * @param DOMPDF $dompdf Current dompdf instance
   24     */
   25:   function __construct(Frame $frame, DOMPDF $dompdf) {
   26:     parent::__construct($frame, $dompdf);
   27    }
   28  

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_row_group_frame_reflower.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Table_Row_Group_Frame_Reflower extends Frame_Reflower {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_row_group_renderer.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Table_Row_Group_Renderer extends Block_Renderer {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\table_row_positioner.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   11   *
   12   * @access private
   13:  * @package dompdf
   14   */
   15  class Table_Row_Positioner extends Positioner {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\tcpdf_adapter.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License
    .
   21   * the underlying TCPDF class.
   22   *
   23:  * @package dompdf
   24   */
   25  class TCPDF_Adapter implements Canvas {
   ..
   35     * @var DOMPDF
   36     */
   37:   private $_dompdf;
   38  
   39    /**
   ..
  106     *                            an array(xmin,ymin,xmax,ymax)
  107     * @param string $orientation The orientation of the document (either 'landscape' or 'portrait')
  108:    * @param DOMPDF $dompdf
  109     */
  110:   function __construct($paper = "letter", $orientation = "portrait", DOMPDF $dompdf) {
  111     
  112      if ( is_array($paper) )
  ...
  124      $this->_height = $size[3] - $size[1];
  125  
  126:     $this->_dompdf = $dompdf;
  127  
  128      $this->_pdf = new TCPDF("P", "pt", array($this->_width, $this->_height));
  ...
  139    }
  140  
  141:   function get_dompdf(){
  142:     return $this->_dompdf;
  143    }
  144    

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\text_frame_decorator.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Brian Sweeney <eclecticgeek@gmail.com>
    .
   13   *
   14   * @access private
   15:  * @package dompdf
   16   */
   17  class Text_Frame_Decorator extends Frame_Decorator {
   ..
   23    public static $_buggy_splittext;
   24    
   25:   function __construct(Frame $frame, DOMPDF $dompdf) {
   26      if ( !$frame->is_text_node() )
   27        throw new DOMPDF_Exception("Text_Decorator can only be applied to #text nodes.");
   28      
   29:     parent::__construct($frame, $dompdf);
   30      $this->_text_spacing = null;
   31    }

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\text_frame_reflower.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Fabien Ménager <fabien.menager@gmail.com>
    .
   12   *
   13   * @access private
   14:  * @package dompdf
   15   */
   16  class Text_Frame_Reflower extends Frame_Reflower {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\include\text_renderer.cls.php:
    1  <?php
    2  /**
    3:  * @package dompdf
    4:  * @link    http://dompdf.github.com/
    5   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    6   * @author  Helmut Tischer <htischer@weihenstephan.org>
    .
   13   *
   14   * @access private
   15:  * @package dompdf
   16   */
   17  class Text_Renderer extends Abstract_Renderer {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\lib\res\html.css:
    1  /**
    2:  * dompdf default stylesheet.
    3   * 
    4   * The Original Code is mozilla.org code.
    .
    8   * All Rights Reserved.
    9   * 
   10:  * @package dompdf
   11:  * @link    http://dompdf.github.com/
   12   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
   13   * @author  Blake Ross <BlakeR1234@aol.com>
   ..
   22  
   23  html { 
   24:   display: -dompdf-page;
   25    counter-reset: page;
   26  }
   ..
  298  
  299  /*li:before {
  300:   display: -dompdf-list-bullet !important;
  301:   content: counter(-dompdf-default-counter) ". ";
  302    padding-right: 0.5em;
  303  }*/
  ...
  490  
  491  br { 
  492:   display: -dompdf-br;
  493  }
  494  
  495  img, img_generated {
  496:   display: -dompdf-image;
  497  }
  498  
  499: dompdf_generated {
  500    display: inline;
  501  }
  ...
  505  noembed, noscript, param {
  506    display: none;
  507:   -dompdf-keep: yes;
  508  }
  509  

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\load_font.php:
    2  <?php
    3  /**
    4:  * @package dompdf
    5:  * @link    http://dompdf.github.com/
    6   * @author  Benj Carson <benjcarson@digitaljunkies.ca>
    7   * @author  Fabien Ménager <fabien.menager@gmail.com>
    .
    9   */
   10  
   11: require_once "dompdf_config.inc.php";
   12  
   13  /**

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\README.md:
    1: [![Latest Stable Version](https://poser.pugx.org/dompdf/dompdf/v/stable.png)](https://packagist.org/packages/dompdf/dompdf) [![Total Downloads](https://poser.pugx.org/dompdf/dompdf/downloads.png)](https://packagist.org/packages/dompdf/dompdf) [![Latest Unstable Version](https://poser.pugx.org/dompdf/dompdf/v/unstable.png)](https://packagist.org/packages/dompdf/dompdf) [![License](https://poser.pugx.org/dompdf/dompdf/license.png)](https://packagist.org/packages/dompdf/dompdf)
    2  
    3: **dompdf is an HTML to PDF converter**.
    4: At its heart, dompdf is (mostly) [CSS 2.1](http://www.w3.org/TR/CSS2/) compliant
    5  HTML layout and rendering engine written in PHP. It is a style-driven renderer:
    6  it will download and read external stylesheets, inline style tags, and the style
    .
   10  ----
   11  
   12: **Check out the [Demo](http://pxd.me/dompdf/www/examples.php) and ask any
   13: question on [StackOverflow](http://stackoverflow.com/questions/tagged/dompdf) or
   14: on the [Google Groups](http://groups.google.com/group/dompdf)**
   15  
   16  ----
   17  
   18: [![Follow us on Twitter](http://twitter-badges.s3.amazonaws.com/twitter-a.png)](http://www.twitter.com/dompdf)
   19  [![Follow us on Google+](https://ssl.gstatic.com/images/icons/gplus-32.png)](https://plus.google.com/108710008521858993320?prsrc=3)
   20  
   ..
   41  ============
   42   * MBString extension: provides internationalization support. This extension is
   43:    *not* enabled by default. dompdf has limited internationalization support
   44     when this extension is not enabled.
   45   * opcache (OPcache, XCache, APC, etc.): improves performance
   ..
   50  Courier, Zapf-Dingbats, & Symbol. These fonts only support Windows ANSI
   51  encoding. In order for a PDF to display characters that are not available in
   52: Windows ANSI you must supply an external font. dompdf will embed any referenced
   53: font in the PDF so long as it has been pre-loaded or is accessible to dompdf and
   54  reference in CSS @font-face rules. See the
   55: [font overview](https://github.com/dompdf/dompdf/wiki/About-Fonts-and-Character-Encoding)
   56  for more information on how to use fonts.
   57  
   58  The [DejaVu TrueType fonts](http://dejavu-fonts.org) have been pre-installed to
   59: give dompdf decent Unicode character coverage by default. To use the DejaVu
   60  fonts reference the font in your stylesheet, e.g. `body { font-family: DejaVu
   61  Sans; }` (for DejaVu Sans).
   ..
   65  Install with git
   66  ---
   67: From the command line switch to the directory where dompdf will reside and run
   68  the following commands:
   69  
   70  ```sh
   71: git clone https://github.com/dompdf/dompdf.git .
   72  git submodule init
   73  git submodule update
   ..
   82  {
   83    "require" : {
   84:     "dompdf/dompdf" : "0.6.*"
   85    }
   86  }
   ..
   95      
   96  Before you can use the Composer installation of DOMPDF in your application you
   97: must disable dompdf's default auto-loader, include the Composer autoloader, and
   98: load the dompdf configuration file:
   99  
  100  ```php
  ...
  107  
  108  // include DOMPDF's default configuration
  109: require_once '/path/to/vendor/dompdf/dompdf/dompdf_config.inc.php';
  110  ```
  111  
  112  Download and install
  113  ---
  114: Download an archive of dompdf and extract it into the directory where dompdf
  115  will reside
  116:  * You can download stable copies of dompdf from
  117:    https://github.com/dompdf/dompdf/tags
  118   * Or download a nightly (the latest, unreleased code) from
  119:    http://eclecticgeek.com/dompdf
  120  
  121  Limitations (Known Issues)

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\controller.php:
    5  $cmd = isset($_GET["cmd"]) ? $_GET["cmd"] : null;
    6  
    7: include "../dompdf_config.inc.php";
    8  include "functions.inc.php";
    9  

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\debugger.php:
   14  <html lang="en">
   15  <head>
   16:   <title>dompdf debugger</title>
   17    <meta name="robots" content="noindex">
   18    <script type="text/javascript" src="jquery-1.4.2.js"></script>
   ..
   41  
   42        setTimeout(function(){
   43:         address = "../dompdf.php?base_path="+basePath+"&options[Attachment]=0&input_file="+addressPDF+"#toolbar=0&view=FitH&statusbar=0&messages=0&navpanes=0";
   44          preview.attr('src', address);
   45        }, 0.1);

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\demo.php:
    1  <?php
    2  
    3: require_once("../dompdf_config.inc.php");
    4  
    5  // We check wether the user is accessing the demo locally
    .
   12      $_POST["html"] = stripslashes($_POST["html"]);
   13    
   14:   $dompdf = new DOMPDF();
   15:   $dompdf->load_html($_POST["html"]);
   16:   $dompdf->set_paper($_POST["paper"], $_POST["orientation"]);
   17:   $dompdf->render();
   18  
   19:   $dompdf->stream("dompdf_out.pdf", array("Attachment" => false));
   20  
   21    exit(0);

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\examples.php:
    1  <?php
    2  
    3: require_once "../dompdf_config.inc.php";
    4  
    5: //if dompdf.php runs in virtual server root, dirname does not return empty folder but '/' or '\' (windows).
    6  //This leads to a duplicate separator in unix etc. and an error in Windows. Therefore strip off.
    7  
    8: $dompdf = dirname(dirname($_SERVER["PHP_SELF"]));
    9: if ( $dompdf == '/' || $dompdf == '\\') {
   10:   $dompdf = '';
   11  }
   12  
   13: $dompdf .= "/dompdf.php?base_path=" . rawurlencode("www/test/");
   14  
   15  include "head.inc"; 
   ..
   38        return "test/"+file;
   39      case "pdf":
   40:       return "<?php echo $dompdf; ?>&options[Attachment]=0&input_file="+file+"#toolbar=0&view=FitH&statusbar=0&messages=0&navpanes=0";
   41    }
   42  }
   ..
   70  <h2>Samples</h2>
   71  
   72: <p>Below are some sample files. The PDF version is generated on the fly by dompdf.  (The source HTML &amp; CSS for
   73  these files is included in the test/ directory of the distribution
   74  package.)</p>
   ..
  125      echo " 
  126    [<a class=\"button\" target=\"preview\" onclick=\"setHash('$filename,html')\" href=\"test/$filename\">HTML</a>] 
  127:   [<a class=\"button\" target=\"preview\" onclick=\"setHash('$filename,pdf')\" href=\"$dompdf&amp;options[Attachment]=0&amp;input_file=" . rawurlencode($filename) . "#toolbar=0&amp;view=FitH&amp;statusbar=0&amp;messages=0&amp;navpanes=0\">PDF</a>] ";
  128      echo $title;
  129      echo "</li>\n";

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\fonts.php:
    1  <?php 
    2  include "head.inc"; 
    3: require_once "../dompdf_config.inc.php"; 
    4  
    5  function to_bytes($string) {

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\functions.inc.php:
   16  function auth_check() {
   17    if ( isset($_GET["login"]) && DOMPDF_ADMIN_PASSWORD == "password" ) {
   18:     $_SESSION["auth_message"] = "The password must be changed in 'dompdf_config.custom.inc.php'";
   19      return false;
   20    }

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\head.inc:
    7  session_start();
    8  
    9: require_once "../dompdf_config.inc.php";
   10  require_once "functions.inc.php";
   11  
   ..
   24  <html lang="en">
   25  <head>
   26:   <title>dompdf - The PHP 5 HTML to PDF Converter</title>
   27    <link rel="stylesheet" href="style.css" type="text/css"/>
   28    <meta name="robots" content="noindex">
   ..
   40  
   41  <div id="header" class="bar">
   42:   <a href="index.php"><img id="logo" src="images/title.gif" alt="dompdf"/></a>
   43:   <a href="http://dompdf.github.com/" target="_blank">dompdf.github.com</a>
   44    &mdash; 
   45:   Send bug reports to <a href="https://github.com/dompdf/dompdf/issues">the bug tracker</a> 
   46:   &amp; support questions to <a href="http://groups.google.com/group/dompdf">Google Groups</a>.
   47  </div>
   48  

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\index.php:
    3  <a name="overview"></a><h2>Overview</h2>
    4  
    5: <p>dompdf is an HTML to PDF converter. At its heart, dompdf is (mostly) CSS2.1
    6  compliant HTML layout and rendering engine written in PHP. It is a style-driven
    7  renderer: it will download and read external stylesheets, inline style tags, and
    .
   12  href="http://www.pdflib.com">www.pdflib.com</a>) or by a bundled version the
   13  CPDF class, originally R&amp;OS CPDF written by Wayne Munro but customized by
   14: the dompdf team to improve performance and add features. In order to use PDFLib
   15: with dompdf the PDFLib PHP extension is required (available from PDFLib). Using
   16: PDFLib improves performance and reduces the memory requirements of dompdf
   17  somewhat, while the CPDF class, though slightly slower, eliminates any
   18  dependencies on external PDF libraries.</p>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\setup.php:
   10  <ul>
   11    <li style="list-style-image: url('images/star_02.gif');"><a href="#system">System Configuration</a></li>
   12:   <li style="list-style-image: url('images/star_02.gif');"><a href="#dompdf-config">DOMPDF Configuration</a></li>
   13  </ul>
   14  
   ..
   16  
   17  <?php
   18: require_once("../dompdf_config.inc.php");
   19  
   20  $server_configs = array(
   ..
   44      "required" => true,
   45      "value"    => phpversion("mbstring"),
   46:     "result"   => function_exists("mb_send_mail"), // Should never be reimplemented in dompdf
   47      "fallback" => "Recommended, will use fallback functions",
   48    ),
   ..
  113  </table>
  114  
  115: <h3 id="dompdf-config">DOMPDF Configuration</h3>
  116  
  117  <?php
  118: $dompdf_constants = array();
  119  $defined_constants = get_defined_constants(true);
  120  
  ...
  211    ),
  212    "DOMPDF_LOG_OUTPUT_FILE" => array(
  213:     "desc" => "The file in which dompdf will write warnings and messages",
  214      "success" => "write",
  215    ),
  ...
  221    ),
  222    "DOMPDF_AUTOLOAD_PREPEND" => array(
  223:     "desc" => "Prepend the dompdf autoload function to the SPL autoload functions already registered instead of appending it",
  224    ),
  225    "DOMPDF_ADMIN_USERNAME" => array(

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\css_media.html:
   32  <h1>css @media media types</h1>
   33  <p class="media">
   34: Depending on dompdf_config.inc.php setting DOMPDF_DEFAULT_MEDIA_TYPE here the
   35  background color appeares different:
   36  </p>
   ..
   43  <h1>css @import media types</h1>
   44  <p class="import">
   45: Depending on dompdf_config.inc.php setting DOMPDF_DEFAULT_MEDIA_TYPE here the
   46  background color appeares different:
   47  </p>
   ..
   61  <h1>css link media types</h1>
   62  <p class="link">
   63: Depending on dompdf_config.inc.php setting DOMPDF_DEFAULT_MEDIA_TYPE here the
   64  background color appeares different:
   65  </p>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\css_overflow_hidden.html:
   23  <h3>overflow: hidden</h3>
   24  <div style="overflow: hidden;">
   25:   <img src="images/dompdf_simple.png" />
   26    Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Sed non risus. 
   27    Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. 
   ..
   30  <h3>overflow: visible</h3>
   31  <div style="overflow: visible;">
   32:   <img src="images/dompdf_simple.png" />
   33    Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Sed non risus. 
   34    Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. 

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\css_position_fixed.html:
   84  <div class="leftpane">
   85    <div style="text-align: center;">
   86: 		<img src="images/dompdf_simple.png" width="80" style="margin: 1cm;" />
   87  	</div>
   88  </div>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\dom_anchor_link.html:
   58  
   59  <p><a href="#anchor3">link to anchor3</a></p>
   60: <p><a href="http://dompdf.github.com/">dompdf.github.com</a></p>
   61  <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec at
   62  odio vitae libero tempus convallis. Cum sociis natoque penatibus et

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\dom_table_image.html:
    7  <table>
    8  <tr>
    9: <td><img src="images/dompdf_simple.png"/></td>
   10  <td>Some Text</td>
   11  </tr>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\dom_ul.html:
  305   <li>list-style:square inside url(images/png.png);</li>
  306   <li style="list-style-position:outside;">list-style-position:outside;[overwrites only position]</li>
  307:  <li style="list-style:outside;">list-style-position:outside;[overwrite attributes - firefox3: all; dompdf, internet explorer 8: only position]</li>
  308   <li style="list-style:none;">list-style:none; [resets both, bullet and image]</li>
  309  </ul>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\encoding_latin1.html:
 1157  <p class=toolbar><a href="../index.html" rel=Start>HTML 4.0 Reference</a> ~ <a href="symbols.html" rel=Next>Symbols and Greek Letters</a> ~ <a href="special.html">Other Special Characters</a></p>
 1158  <p class=copyright>Copyright &copy; 1998 by <a href="http://www.htmlhelp.com/%7Eliam/">Liam Quinn</a>. This material may be distributed only subject to the terms and conditions set forth in the Open Publication License, v1.0 or later (the latest version is presently available at <a href="http://www.opencontent.org/openpub/">http://www.opencontent.org/openpub/</a>).</p>
 1159: <p class=copyright>Modfications made by Benj Carson <a>benjcarson@digitaljunkies.ca</a> for dompdf, Jan 5, 2006.</p>
 1160  </div>
 1161  </body>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\encoding_special.html:
  565  <p class=toolbar><a href="../index.html" rel=Start>HTML&#160;4.0&#160;Reference</a>&#160;~ <a href="latin1.html">Latin-1&#160;Characters</a>&#160;~ <a href="symbols.html" rel=Prev>Symbols&#160;and&#160;Greek&#160;Letters</a></p>
  566  <p class=copyright>Copyright &copy; 1998 by <a href="http://www.htmlhelp.com/%7Eliam/">Liam Quinn</a>. This material may be distributed only subject to the terms and conditions set forth in the Open Publication License, v1.0 or later (the latest version is presently available at <a href="http://www.opencontent.org/openpub/">http://www.opencontent.org/openpub/</a>).</p>
  567: <p class=copyright>Modfications made by Benj Carson <a>benjcarson@digitaljunkies.ca</a> for dompdf, Jan 5, 2006.</p>
  568  </div>
  569  </body>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\encoding_symbols.html:
 1395  <p class=toolbar><a href="../index.html" rel=Start>HTML&#160;4.0&#160;Reference</a>&#160;~ <a href="latin1.html" rel=Prev>Latin-1&#160;Characters</a>&#160;~ <a href="special.html" rel=Next>Other&#160;Special&#160;Characters</a></p>
 1396  <p class=copyright>Copyright &copy; 1998 by <a href="http://www.htmlhelp.com/%7Eliam/">Liam Quinn</a>. This material may be distributed only subject to the terms and conditions set forth in the Open Publication License, v1.0 or later (the latest version is presently available at <a href="http://www.opencontent.org/openpub/">http://www.opencontent.org/openpub/</a>).</p>
 1397: <p class=copyright>Modfications made by Benj Carson <a>benjcarson@digitaljunkies.ca</a> for dompdf, Jan 5, 2006.</p>
 1398  </div>
 1399  </body>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\image_background.html:
   15  	background-image: url(images/dokuwiki-128.png);
   16  }
   17: p.c1 { background-image: url(images/dompdf_simple.png); background-repeat: repeat-x; background-position: 100px 50%; }
   18  p.c2 { background-image: url(images/php.gif); background-position: bottom center; background-repeat: repeat-y; }
   19  
   ..
   23    Images with background-color, background-image, border, margin and padding
   24    <img src="images/php.gif" />
   25:   <img src="images/dompdf_simple.png" />
   26:   <img src="images/dompdf_simple.png" style="background-repeat: no-repeat;" />
   27    <img src="images/php.gif" style="background-repeat: no-repeat;" />
   28  

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\image_basic.html:
   13  <body>
   14  <div style="text-align: center; margin-top: 40%;">
   15: <img style="width: 75%;" src="images/dompdf_simple.png"/>
   16  <br/>
   17  <span>The PHP 5 HTML to PDF converter</span>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\image_datauri.html:
   20  <p>
   21  	Normal &lt;img&gt; : <br />
   22: 	<img src="images/dompdf_simple.png" />
   23  </p>
   24  
   ..
   27  </p>
   28  
   29: <p style="height: 76px; background: no-repeat url(images/dompdf_simple.png)">
   30    Normal background image
   31  </p>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\image_dimensions.html:
   20  width=150
   21  <br />
   22: <img width="150" src="images/dompdf_simple.png" />
   23  <br />
   24  
   25  width: 40mm
   26  <br />
   27: <img style="width: 40mm;" src="images/dompdf_simple.png" />
   28  <br />
   29  
   30  width: 4cm
   31  <br />
   32: <img style="width: 4cm;" src="images/dompdf_simple.png" />
   33  <br />
   34  
   35  width: 21%
   36  <br />
   37: <img style="width: 21%;" src="images/dompdf_simple.png" />
   38  <br />
   39  
   40  width: 150px
   41  <br />
   42: <img style="width: 150px;" src="images/dompdf_simple.png" />
   43  <br />
   44  
   45  width: 110pt
   46  <br />
   47: <img style="width: 110pt;" src="images/dompdf_simple.png" />
   48  <br />
   49  

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\image_remote.html:
    3  <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
    4  <head>
    5: <link rel="stylesheet" href="https://github.com/dompdf/dompdf/raw/master/www/style.css" type="text/css"/>
    6  <style>
    7  #content {
    .
   16  <p>Note: DOMPDF_ENABLE_REMOTE must be enabled for this test to work.</p>
   17  
   18: <h3>CSS: <a href="https://github.com/dompdf/dompdf/raw/master/www/style.css">https://github.com/dompdf/dompdf/raw/master/www/style.css</a></h3>
   19  <p>
   20  	Remote image with extension: <br />
   21: 	<img src="https://github.com/dompdf/dompdf/raw/master/www/test/images/dompdf_simple.png"/>
   22  </p>
   23  <p>
   24    Remote image without extension: <br />
   25:   <img src="https://github.com/dompdf/dompdf/raw/master/www/test/images/no_extension"/>
   26  </p>
   27  <p>
   28    Remote image with unknown extension: <br />
   29:   <img src="https://github.com/dompdf/dompdf/raw/master/www/test/images/unknown_extension.foo"/>
   30  </p>
   31  <p>
   32    Remote image with unknown extension and params: <br />
   33:   <img src="https://github.com/dompdf/dompdf/raw/master/www/test/images/unknown_extension.foo?bar=baz"/>
   34  </p>
   35  <p>
   36    Remote image with unknown extension and advanced params: <br />
   37:   <img src="https://github.com/dompdf/dompdf/raw/master/www/test/images/unknown_extension.foo?bar=baz&amp;test[]=test space&amp;test[]=test%20space"/>
   38  </p>
   39  </div>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\image_variants.html:
   24  <h2> 40% of box width:</h2>
   25  <div style="width:360pt; border:1pt solid #7d7a7a">
   26: <img style="width:40%;" src="images/dompdf_simple.png"/>
   27  </div>
   28  
   ..
   32  <img src="images/goldengate.jpg" width="204" height="272"/>
   33  
   34: <h2>multiple identical images gif (will be recoded to png by dompdf):</h2>
   35  <img src="images/what_ordered.gif" width="560" height="272"/>
   36  <img src="images/what_ordered.gif" width="560" height="272"/>
   ..
   38  
   39  <h2>multiple identical images png:</h2>
   40: <img src="images/dompdf_simple.png" width="200" height="76"/>
   41: <img src="images/dompdf_simple.png" width="200" height="76"/>
   42: <img src="images/dompdf_simple.png" width="200" height="76"/>
   43  
   44  <h2>local png image with alpha channel:</h2>
   ..
   48  
   49  <p style="color:red;">For external images to work, the following configuration is required:</p>
   50: <pre style="color:red;">dompdf_config.inc.php :</pre>
   51  
   52  <pre style="color:red;">define("DOMPDF_ENABLE_REMOTE", true);</pre>
   ..
  134  
  135  <h2 style="color:red;">Attention!</h2>
  136: <p style="color:red;">For absolute image references to work, the file (dompdf)/www/test/images/smiley.png must be copyied exactly to (virtual web server root)/absimagetest/smiley.png</p>
  137  <li><a href="bgimages" style="background-image:url(/absimagetest/smiley.png);">no-repeat position:default image:url(/absimagetest/smiley.png) [abs image ]</a></li>
  138  </ul>

C:\virtualhost\empresasgrau\vendor\dompdf\dompdf\www\test\print_header_footer.html:
   84  
   85  <p>
   86: 	<img src="images/dompdf_simple.png" style="float: right; margin: 0.5em;" />
   87  Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Sed non
   88  risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec,

C:\virtualhost\empresasgrau\vendor\phenx\php-font-lib\README.md:
    7  You can find a demo GUI [here](http://pxd.me/php-font-lib/www/font_explorer.html).
    8  
    9: This project was initiated by the need to read font files in the [DOMPDF project](https://github.com/dompdf/dompdf).
   10  